//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExampleRepoClient.DesignerRepositoryClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.WindowsLoginUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.WebHostWrappedUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.GuestUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.ImpersonateUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.SessionUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.PasswordCredentialsUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FacebookCredentialsUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.SecuredUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.LocalImpersonationContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.LocalMachineUserContext))]
    public partial class AbstractUserContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrowserUserAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientEventSessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.DisplayType DisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StudioPortalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrowserUserAgent {
            get {
                return this.BrowserUserAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.BrowserUserAgentField, value) != true)) {
                    this.BrowserUserAgentField = value;
                    this.RaisePropertyChanged("BrowserUserAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientEventSessionId {
            get {
                return this.ClientEventSessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientEventSessionIdField, value) != true)) {
                    this.ClientEventSessionIdField = value;
                    this.RaisePropertyChanged("ClientEventSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.DisplayType DisplayType {
            get {
                return this.DisplayTypeField;
            }
            set {
                if ((this.DisplayTypeField.Equals(value) != true)) {
                    this.DisplayTypeField = value;
                    this.RaisePropertyChanged("DisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StudioPortal {
            get {
                return this.StudioPortalField;
            }
            set {
                if ((this.StudioPortalField.Equals(value) != true)) {
                    this.StudioPortalField = value;
                    this.RaisePropertyChanged("StudioPortal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsLoginUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class WindowsLoginUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebHostWrappedUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class WebHostWrappedUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallingIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext WrappedUserContextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallingIP {
            get {
                return this.CallingIPField;
            }
            set {
                if ((object.ReferenceEquals(this.CallingIPField, value) != true)) {
                    this.CallingIPField = value;
                    this.RaisePropertyChanged("CallingIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext WrappedUserContext {
            get {
                return this.WrappedUserContextField;
            }
            set {
                if ((object.ReferenceEquals(this.WrappedUserContextField, value) != true)) {
                    this.WrappedUserContextField = value;
                    this.RaisePropertyChanged("WrappedUserContext");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuestUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class GuestUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImpersonateUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class ImpersonateUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext RealUserContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.UserIdentifierType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext RealUserContext {
            get {
                return this.RealUserContextField;
            }
            set {
                if ((object.ReferenceEquals(this.RealUserContextField, value) != true)) {
                    this.RealUserContextField = value;
                    this.RaisePropertyChanged("RealUserContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.UserIdentifierType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class SessionUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionValue {
            get {
                return this.SessionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionValueField, value) != true)) {
                    this.SessionValueField = value;
                    this.RaisePropertyChanged("SessionValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordCredentialsUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class PasswordCredentialsUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacebookCredentialsUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class FacebookCredentialsUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacebookIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacebookID {
            get {
                return this.FacebookIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookIDField, value) != true)) {
                    this.FacebookIDField = value;
                    this.RaisePropertyChanged("FacebookID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecuredUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class SecuredUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuredKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuredKey {
            get {
                return this.SecuredKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuredKeyField, value) != true)) {
                    this.SecuredKeyField = value;
                    this.RaisePropertyChanged("SecuredKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalImpersonationContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class LocalImpersonationContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalMachineUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class LocalMachineUserContext : ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Folder")]
    public enum DisplayType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Silverlight = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Html = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HtmlWithSilverlight = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HtmlMobile = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HtmlTablet = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserIdentifierType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    public enum UserIdentifierType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class FrameworkFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleInfoFile", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.DiffResourceClientInfo))]
    public partial class ModuleInfoFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByMachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedOnRevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPreview {
            get {
                return this.HasPreviewField;
            }
            set {
                if ((this.HasPreviewField.Equals(value) != true)) {
                    this.HasPreviewField = value;
                    this.RaisePropertyChanged("HasPreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedByMachine {
            get {
                return this.ModifiedByMachineField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByMachineField, value) != true)) {
                    this.ModifiedByMachineField = value;
                    this.RaisePropertyChanged("ModifiedByMachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedOnRevisionId {
            get {
                return this.ModifiedOnRevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedOnRevisionIdField, value) != true)) {
                    this.ModifiedOnRevisionIdField = value;
                    this.RaisePropertyChanged("ModifiedOnRevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceCheckinInfo", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository")]
    [System.SerializableAttribute()]
    public partial class ResourceCheckinInfo : ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUpdated {
            get {
                return this.IsUpdatedField;
            }
            set {
                if ((this.IsUpdatedField.Equals(value) != true)) {
                    this.IsUpdatedField = value;
                    this.RaisePropertyChanged("IsUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionId {
            get {
                return this.RevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdField, value) != true)) {
                    this.RevisionIdField = value;
                    this.RaisePropertyChanged("RevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortTypeName {
            get {
                return this.ShortTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortTypeNameField, value) != true)) {
                    this.ShortTypeNameField = value;
                    this.RaisePropertyChanged("ShortTypeName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiffResourceClientInfo", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository.Client.Servi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class DiffResourceClientInfo : ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DownloadDateOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnBothSidesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlyOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlyOnServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UploadDateOnClientField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeletedOnClient {
            get {
                return this.DeletedOnClientField;
            }
            set {
                if ((this.DeletedOnClientField.Equals(value) != true)) {
                    this.DeletedOnClientField = value;
                    this.RaisePropertyChanged("DeletedOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DownloadDateOnClient {
            get {
                return this.DownloadDateOnClientField;
            }
            set {
                if ((this.DownloadDateOnClientField.Equals(value) != true)) {
                    this.DownloadDateOnClientField = value;
                    this.RaisePropertyChanged("DownloadDateOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedByOnClient {
            get {
                return this.ModifiedByOnClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByOnClientField, value) != true)) {
                    this.ModifiedByOnClientField = value;
                    this.RaisePropertyChanged("ModifiedByOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDateOnClient {
            get {
                return this.ModifiedDateOnClientField;
            }
            set {
                if ((this.ModifiedDateOnClientField.Equals(value) != true)) {
                    this.ModifiedDateOnClientField = value;
                    this.RaisePropertyChanged("ModifiedDateOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOnClient {
            get {
                return this.NameOnClientField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOnClientField, value) != true)) {
                    this.NameOnClientField = value;
                    this.RaisePropertyChanged("NameOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnBothSides {
            get {
                return this.OnBothSidesField;
            }
            set {
                if ((this.OnBothSidesField.Equals(value) != true)) {
                    this.OnBothSidesField = value;
                    this.RaisePropertyChanged("OnBothSides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlyOnClient {
            get {
                return this.OnlyOnClientField;
            }
            set {
                if ((this.OnlyOnClientField.Equals(value) != true)) {
                    this.OnlyOnClientField = value;
                    this.RaisePropertyChanged("OnlyOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlyOnServer {
            get {
                return this.OnlyOnServerField;
            }
            set {
                if ((this.OnlyOnServerField.Equals(value) != true)) {
                    this.OnlyOnServerField = value;
                    this.RaisePropertyChanged("OnlyOnServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PathOnClient {
            get {
                return this.PathOnClientField;
            }
            set {
                if ((object.ReferenceEquals(this.PathOnClientField, value) != true)) {
                    this.PathOnClientField = value;
                    this.RaisePropertyChanged("PathOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionIdOnClient {
            get {
                return this.RevisionIdOnClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdOnClientField, value) != true)) {
                    this.RevisionIdOnClientField = value;
                    this.RaisePropertyChanged("RevisionIdOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side {
            get {
                return this.SideField;
            }
            set {
                if ((object.ReferenceEquals(this.SideField, value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UploadDateOnClient {
            get {
                return this.UploadDateOnClientField;
            }
            set {
                if ((this.UploadDateOnClientField.Equals(value) != true)) {
                    this.UploadDateOnClientField = value;
                    this.RaisePropertyChanged("UploadDateOnClient");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckoutResources", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository.Client")]
    [System.SerializableAttribute()]
    public partial class CheckoutResources : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.ResourceCheckoutInfo[] ToDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.ResourceCheckoutInfo[] ToMergeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.ResourceCheckoutInfo[] ToUpdateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckoutInfo[] ToDelete {
            get {
                return this.ToDeleteField;
            }
            set {
                if ((object.ReferenceEquals(this.ToDeleteField, value) != true)) {
                    this.ToDeleteField = value;
                    this.RaisePropertyChanged("ToDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckoutInfo[] ToMerge {
            get {
                return this.ToMergeField;
            }
            set {
                if ((object.ReferenceEquals(this.ToMergeField, value) != true)) {
                    this.ToMergeField = value;
                    this.RaisePropertyChanged("ToMerge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckoutInfo[] ToUpdate {
            get {
                return this.ToUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.ToUpdateField, value) != true)) {
                    this.ToUpdateField = value;
                    this.RaisePropertyChanged("ToUpdate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceCheckoutInfo", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository.Client")]
    [System.SerializableAttribute()]
    public partial class ResourceCheckoutInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalRevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerRevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseLocalVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUpdated {
            get {
                return this.IsUpdatedField;
            }
            set {
                if ((this.IsUpdatedField.Equals(value) != true)) {
                    this.IsUpdatedField = value;
                    this.RaisePropertyChanged("IsUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalRevisionId {
            get {
                return this.LocalRevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalRevisionIdField, value) != true)) {
                    this.LocalRevisionIdField = value;
                    this.RaisePropertyChanged("LocalRevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerRevisionId {
            get {
                return this.ServerRevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerRevisionIdField, value) != true)) {
                    this.ServerRevisionIdField = value;
                    this.RaisePropertyChanged("ServerRevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortTypeName {
            get {
                return this.ShortTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortTypeNameField, value) != true)) {
                    this.ShortTypeNameField = value;
                    this.RaisePropertyChanged("ShortTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseLocalVersion {
            get {
                return this.UseLocalVersionField;
            }
            set {
                if ((this.UseLocalVersionField.Equals(value) != true)) {
                    this.UseLocalVersionField = value;
                    this.RaisePropertyChanged("UseLocalVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportResult", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "ImportExport")]
    [System.SerializableAttribute()]
    public partial class ImportResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.ImportResults ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityIdField, value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.ImportResults Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportResults", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "ImportExport")]
    public enum ImportResults : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Imported = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotNecessary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedNeedsRestart = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportModuleData", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "ImportExport")]
    [System.SerializableAttribute()]
    public partial class ExportModuleData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasDependenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedsExportField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderPath {
            get {
                return this.FolderPathField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderPathField, value) != true)) {
                    this.FolderPathField = value;
                    this.RaisePropertyChanged("FolderPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasDependencies {
            get {
                return this.HasDependenciesField;
            }
            set {
                if ((this.HasDependenciesField.Equals(value) != true)) {
                    this.HasDependenciesField = value;
                    this.RaisePropertyChanged("HasDependencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFolder {
            get {
                return this.IsFolderField;
            }
            set {
                if ((this.IsFolderField.Equals(value) != true)) {
                    this.IsFolderField = value;
                    this.RaisePropertyChanged("IsFolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsExport {
            get {
                return this.NeedsExportField;
            }
            set {
                if ((this.NeedsExportField.Equals(value) != true)) {
                    this.NeedsExportField = value;
                    this.RaisePropertyChanged("NeedsExport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckinResult", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository.Client")]
    [System.SerializableAttribute()]
    public partial class CheckinResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] ResourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] Resources {
            get {
                return this.ResourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourcesField, value) != true)) {
                    this.ResourcesField = value;
                    this.RaisePropertyChanged("Resources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionId {
            get {
                return this.RevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdField, value) != true)) {
                    this.RevisionIdField = value;
                    this.RaisePropertyChanged("RevisionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleCheckinInfo", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository")]
    [System.SerializableAttribute()]
    public partial class ModuleCheckinInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.RepositoryState StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckinId {
            get {
                return this.CheckinIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckinIdField, value) != true)) {
                    this.CheckinIdField = value;
                    this.RaisePropertyChanged("CheckinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTag {
            get {
                return this.IsTagField;
            }
            set {
                if ((this.IsTagField.Equals(value) != true)) {
                    this.IsTagField = value;
                    this.RaisePropertyChanged("IsTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resources {
            get {
                return this.ResourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourcesField, value) != true)) {
                    this.ResourcesField = value;
                    this.RaisePropertyChanged("Resources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionId {
            get {
                return this.RevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdField, value) != true)) {
                    this.RevisionIdField = value;
                    this.RaisePropertyChanged("RevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.RepositoryState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepositoryState", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository")]
    public enum RepositoryState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Release = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HotFix = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Development = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiffModuleClientInfo", Namespace="http://schemas.datacontract.org/2004/07/Decisions.DesignerRepository.Client.Servi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class DiffModuleClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CalculatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastCheckinByOnServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCheckinDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCheckinDateOnServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCheckoutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.DiffResourceClientInfo[] ResourcesDifferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdOnServerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchName {
            get {
                return this.BranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchNameField, value) != true)) {
                    this.BranchNameField = value;
                    this.RaisePropertyChanged("BranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CalculatedDate {
            get {
                return this.CalculatedDateField;
            }
            set {
                if ((this.CalculatedDateField.Equals(value) != true)) {
                    this.CalculatedDateField = value;
                    this.RaisePropertyChanged("CalculatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastCheckinByOnServer {
            get {
                return this.LastCheckinByOnServerField;
            }
            set {
                if ((object.ReferenceEquals(this.LastCheckinByOnServerField, value) != true)) {
                    this.LastCheckinByOnServerField = value;
                    this.RaisePropertyChanged("LastCheckinByOnServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastCheckinDate {
            get {
                return this.LastCheckinDateField;
            }
            set {
                if ((this.LastCheckinDateField.Equals(value) != true)) {
                    this.LastCheckinDateField = value;
                    this.RaisePropertyChanged("LastCheckinDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastCheckinDateOnServer {
            get {
                return this.LastCheckinDateOnServerField;
            }
            set {
                if ((this.LastCheckinDateOnServerField.Equals(value) != true)) {
                    this.LastCheckinDateOnServerField = value;
                    this.RaisePropertyChanged("LastCheckinDateOnServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastCheckoutDate {
            get {
                return this.LastCheckoutDateField;
            }
            set {
                if ((this.LastCheckoutDateField.Equals(value) != true)) {
                    this.LastCheckoutDateField = value;
                    this.RaisePropertyChanged("LastCheckoutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.DiffResourceClientInfo[] ResourcesDifferences {
            get {
                return this.ResourcesDifferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourcesDifferencesField, value) != true)) {
                    this.ResourcesDifferencesField = value;
                    this.RaisePropertyChanged("ResourcesDifferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionIdOnClient {
            get {
                return this.RevisionIdOnClientField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdOnClientField, value) != true)) {
                    this.RevisionIdOnClientField = value;
                    this.RaisePropertyChanged("RevisionIdOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionIdOnServer {
            get {
                return this.RevisionIdOnServerField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdOnServerField, value) != true)) {
                    this.RevisionIdOnServerField = value;
                    this.RaisePropertyChanged("RevisionIdOnServer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleResource", Namespace="http://schemas.datacontract.org/2004/07/DecisionsServiceHost")]
    [System.SerializableAttribute()]
    public partial class ModuleResource : ExampleRepoClient.DesignerRepositoryClient.BaseORMEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityLogicalTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateDownloadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateUploadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverrideFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.DesignerRepositoryClient.ResourceType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckSum {
            get {
                return this.CheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckSumField, value) != true)) {
                    this.CheckSumField = value;
                    this.RaisePropertyChanged("CheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityIdField, value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityLogicalTypeName {
            get {
                return this.EntityLogicalTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityLogicalTypeNameField, value) != true)) {
                    this.EntityLogicalTypeNameField = value;
                    this.RaisePropertyChanged("EntityLogicalTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDateDownload {
            get {
                return this.LastDateDownloadField;
            }
            set {
                if ((this.LastDateDownloadField.Equals(value) != true)) {
                    this.LastDateDownloadField = value;
                    this.RaisePropertyChanged("LastDateDownload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDateUpload {
            get {
                return this.LastDateUploadField;
            }
            set {
                if ((this.LastDateUploadField.Equals(value) != true)) {
                    this.LastDateUploadField = value;
                    this.RaisePropertyChanged("LastDateUpload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OverrideFileName {
            get {
                return this.OverrideFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OverrideFileNameField, value) != true)) {
                    this.OverrideFileNameField = value;
                    this.RaisePropertyChanged("OverrideFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionId {
            get {
                return this.RevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionIdField, value) != true)) {
                    this.RevisionIdField = value;
                    this.RaisePropertyChanged("RevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.DesignerRepositoryClient.ResourceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseORMEntity", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.Data.ORMapper")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.ModuleResource))]
    public partial class BaseORMEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsServiceHost")]
    public enum ResourceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SQLScript = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLIScript = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportObject = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DesignerRepositoryClient.IDesignerRepositoryClientService")]
    public interface IDesignerRepositoryClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/IsRepositoryServerAccessible", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/IsRepositoryServerAccessibleR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool IsRepositoryServerAccessible(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/IsRepositoryServerAccessible", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/IsRepositoryServerAccessibleR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> IsRepositoryServerAccessibleAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetModules", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetModulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string[] GetModules(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetModules", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetModulesResponse")]
        System.Threading.Tasks.Task<string[]> GetModulesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetBranches", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetBranchesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string[] GetBranches(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetBranches", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetBranchesResponse")]
        System.Threading.Tasks.Task<string[]> GetBranchesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/IsEntityFromModule", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/IsEntityFromModuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool IsEntityFromModule(string entityId, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/IsEntityFromModule", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/IsEntityFromModuleResponse")]
        System.Threading.Tasks.Task<bool> IsEntityFromModuleAsync(string entityId, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/IsModuleCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/IsModuleCheckoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool IsModuleCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/IsModuleCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/IsModuleCheckoutResponse")]
        System.Threading.Tasks.Task<bool> IsModuleCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetBranchForModule", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetBranchForModuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string GetBranchForModule(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetBranchForModule", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetBranchForModuleResponse")]
        System.Threading.Tasks.Task<string> GetBranchForModuleAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/ModuleExistsOnServer", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/ModuleExistsOnServerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool ModuleExistsOnServer(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/ModuleExistsOnServer", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/ModuleExistsOnServerResponse")]
        System.Threading.Tasks.Task<bool> ModuleExistsOnServerAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFiles", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] GetInfoFiles(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFiles", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[]> GetInfoFilesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByDate", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] GetInfoFilesByDate(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByDate", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByDateResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[]> GetInfoFilesByDateAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByRevision", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByRevisionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] GetInfoFilesByRevision(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string revision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByRevision", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetInfoFilesByRevisionRespons" +
            "e")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[]> GetInfoFilesByRevisionAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string revision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetCheckoutResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetCheckoutResourcesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.CheckoutResources GetCheckoutResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] repositoryResources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetCheckoutResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetCheckoutResourcesResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.CheckoutResources> GetCheckoutResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] repositoryResources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/StartCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/StartCheckoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string StartCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, string revisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/StartCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/StartCheckoutResponse")]
        System.Threading.Tasks.Task<string> StartCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, string revisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/StartCheckoutofDate", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/StartCheckoutofDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string StartCheckoutofDate(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/StartCheckoutofDate", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/StartCheckoutofDateResponse")]
        System.Threading.Tasks.Task<string> StartCheckoutofDateAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/CommitCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CommitCheckoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CommitCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/CommitCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CommitCheckoutResponse")]
        System.Threading.Tasks.Task CommitCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/CancelCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CancelCheckoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CancelCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId, string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/CancelCheckout", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CancelCheckoutResponse")]
        System.Threading.Tasks.Task CancelCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId, string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/StartImportResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/StartImportResourcesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string StartImportResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/StartImportResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/StartImportResourcesResponse")]
        System.Threading.Tasks.Task<string> StartImportResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/AddMergedIssues", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/AddMergedIssuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void AddMergedIssues(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/AddMergedIssues", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/AddMergedIssuesResponse")]
        System.Threading.Tasks.Task AddMergedIssuesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/AddRemovedIssues", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/AddRemovedIssuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void AddRemovedIssues(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/AddRemovedIssues", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/AddRemovedIssuesResponse")]
        System.Threading.Tasks.Task AddRemovedIssuesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/FinishImportResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/FinishImportResourcesResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ImportResult FinishImportResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/FinishImportResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/FinishImportResourcesResponse" +
            "")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ImportResult> FinishImportResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetModuleDataForFolder", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetModuleDataForFolderRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ExportModuleData[] GetModuleDataForFolder(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string folderId, bool includeSubFolders, bool excludeHistoryFolders, bool excludeHiddenItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetModuleDataForFolder", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetModuleDataForFolderRespons" +
            "e")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ExportModuleData[]> GetModuleDataForFolderAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string folderId, bool includeSubFolders, bool excludeHistoryFolders, bool excludeHiddenItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetCheckinInfos", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetCheckinInfosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] GetCheckinInfos(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetCheckinInfos", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetCheckinInfosResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[]> GetCheckinInfosAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/Checkin", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CheckinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.CheckinResult Checkin(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] infos, string notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/Checkin", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CheckinResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.CheckinResult> CheckinAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] infos, string notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetResourcesToRevert", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetResourcesToRevertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] GetResourcesToRevert(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetResourcesToRevert", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetResourcesToRevertResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[]> GetResourcesToRevertAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/Revert", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/RevertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ImportResult Revert(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/Revert", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/RevertResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ImportResult> RevertAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetChekinLogs", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetChekinLogsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ModuleCheckinInfo[] GetChekinLogs(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetChekinLogs", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetChekinLogsResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleCheckinInfo[]> GetChekinLogsAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/CalculateDifferences", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CalculateDifferencesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CalculateDifferences(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/CalculateDifferences", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/CalculateDifferencesResponse")]
        System.Threading.Tasks.Task CalculateDifferencesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetLastModuleDifferences", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetLastModuleDifferencesRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.DiffModuleClientInfo GetLastModuleDifferences(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetLastModuleDifferences", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetLastModuleDifferencesRespo" +
            "nse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.DiffModuleClientInfo> GetLastModuleDifferencesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/UserHasValidCredentialsForRep" +
            "ository", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/UserHasValidCredentialsForRep" +
            "ositoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool UserHasValidCredentialsForRepository(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/UserHasValidCredentialsForRep" +
            "ository", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/UserHasValidCredentialsForRep" +
            "ositoryResponse")]
        System.Threading.Tasks.Task<bool> UserHasValidCredentialsForRepositoryAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/UpdateUserCredentials", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/UpdateUserCredentialsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void UpdateUserCredentials(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string email, string password, bool updateAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/UpdateUserCredentials", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/UpdateUserCredentialsResponse" +
            "")]
        System.Threading.Tasks.Task UpdateUserCredentialsAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string email, string password, bool updateAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetRepositoryUser", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetRepositoryUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string GetRepositoryUser(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetRepositoryUser", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetRepositoryUserResponse")]
        System.Threading.Tasks.Task<string> GetRepositoryUserAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/ResetCachedCredentials", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/ResetCachedCredentialsRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void ResetCachedCredentials(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/ResetCachedCredentials", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/ResetCachedCredentialsRespons" +
            "e")]
        System.Threading.Tasks.Task ResetCachedCredentialsAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetServerRemovedResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetServerRemovedResourcesResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] GetServerRemovedResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] removedClientResources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetServerRemovedResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetServerRemovedResourcesResp" +
            "onse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[]> GetServerRemovedResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] removedClientResources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetClientRemovedResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetClientRemovedResourcesResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] GetClientRemovedResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string entityId, string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/GetClientRemovedResources", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/GetClientRemovedResourcesResp" +
            "onse")]
        System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleResource[]> GetClientRemovedResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string entityId, string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/RemoveFromClient", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/RemoveFromClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.DesignerRepositoryClient.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void RemoveFromClient(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerRepositoryClientService/RemoveFromClient", ReplyAction="http://tempuri.org/IDesignerRepositoryClientService/RemoveFromClientResponse")]
        System.Threading.Tasks.Task RemoveFromClientAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] resources);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDesignerRepositoryClientServiceChannel : ExampleRepoClient.DesignerRepositoryClient.IDesignerRepositoryClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DesignerRepositoryClientServiceClient : System.ServiceModel.ClientBase<ExampleRepoClient.DesignerRepositoryClient.IDesignerRepositoryClientService>, ExampleRepoClient.DesignerRepositoryClient.IDesignerRepositoryClientService {
        
        public DesignerRepositoryClientServiceClient() {
        }
        
        public DesignerRepositoryClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DesignerRepositoryClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DesignerRepositoryClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DesignerRepositoryClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsRepositoryServerAccessible(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.IsRepositoryServerAccessible(userContext);
        }
        
        public System.Threading.Tasks.Task<bool> IsRepositoryServerAccessibleAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.IsRepositoryServerAccessibleAsync(userContext);
        }
        
        public string[] GetModules(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context) {
            return base.Channel.GetModules(context);
        }
        
        public System.Threading.Tasks.Task<string[]> GetModulesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context) {
            return base.Channel.GetModulesAsync(context);
        }
        
        public string[] GetBranches(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.GetBranches(context, moduleName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBranchesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.GetBranchesAsync(context, moduleName);
        }
        
        public bool IsEntityFromModule(string entityId, string moduleName) {
            return base.Channel.IsEntityFromModule(entityId, moduleName);
        }
        
        public System.Threading.Tasks.Task<bool> IsEntityFromModuleAsync(string entityId, string moduleName) {
            return base.Channel.IsEntityFromModuleAsync(entityId, moduleName);
        }
        
        public bool IsModuleCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.IsModuleCheckout(context, moduleName);
        }
        
        public System.Threading.Tasks.Task<bool> IsModuleCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.IsModuleCheckoutAsync(context, moduleName);
        }
        
        public string GetBranchForModule(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.GetBranchForModule(context, moduleName);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchForModuleAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.GetBranchForModuleAsync(context, moduleName);
        }
        
        public bool ModuleExistsOnServer(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.ModuleExistsOnServer(context, moduleName);
        }
        
        public System.Threading.Tasks.Task<bool> ModuleExistsOnServerAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName) {
            return base.Channel.ModuleExistsOnServerAsync(context, moduleName);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] GetInfoFiles(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName) {
            return base.Channel.GetInfoFiles(userContext, moduleName, branchName);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[]> GetInfoFilesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName) {
            return base.Channel.GetInfoFilesAsync(userContext, moduleName, branchName);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] GetInfoFilesByDate(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, System.DateTime date) {
            return base.Channel.GetInfoFilesByDate(userContext, moduleName, branchName, date);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[]> GetInfoFilesByDateAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, System.DateTime date) {
            return base.Channel.GetInfoFilesByDateAsync(userContext, moduleName, branchName, date);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] GetInfoFilesByRevision(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string revision) {
            return base.Channel.GetInfoFilesByRevision(userContext, moduleName, branchName, revision);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[]> GetInfoFilesByRevisionAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string revision) {
            return base.Channel.GetInfoFilesByRevisionAsync(userContext, moduleName, branchName, revision);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.CheckoutResources GetCheckoutResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] repositoryResources) {
            return base.Channel.GetCheckoutResources(userContext, moduleName, repositoryResources);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.CheckoutResources> GetCheckoutResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] repositoryResources) {
            return base.Channel.GetCheckoutResourcesAsync(userContext, moduleName, repositoryResources);
        }
        
        public string StartCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, string revisionId) {
            return base.Channel.StartCheckout(context, moduleName, branchName, revisionId);
        }
        
        public System.Threading.Tasks.Task<string> StartCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, string revisionId) {
            return base.Channel.StartCheckoutAsync(context, moduleName, branchName, revisionId);
        }
        
        public string StartCheckoutofDate(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, System.DateTime date) {
            return base.Channel.StartCheckoutofDate(context, moduleName, branchName, date);
        }
        
        public System.Threading.Tasks.Task<string> StartCheckoutofDateAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string moduleName, string branchName, System.DateTime date) {
            return base.Channel.StartCheckoutofDateAsync(context, moduleName, branchName, date);
        }
        
        public void CommitCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId) {
            base.Channel.CommitCheckout(context, checkoutId);
        }
        
        public System.Threading.Tasks.Task CommitCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId) {
            return base.Channel.CommitCheckoutAsync(context, checkoutId);
        }
        
        public void CancelCheckout(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId, string errorMessage) {
            base.Channel.CancelCheckout(context, checkoutId, errorMessage);
        }
        
        public System.Threading.Tasks.Task CancelCheckoutAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext context, string checkoutId, string errorMessage) {
            return base.Channel.CancelCheckoutAsync(context, checkoutId, errorMessage);
        }
        
        public string StartImportResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            return base.Channel.StartImportResources(userContext, moduleName, branchName, destinationFolderId, resources);
        }
        
        public System.Threading.Tasks.Task<string> StartImportResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            return base.Channel.StartImportResourcesAsync(userContext, moduleName, branchName, destinationFolderId, resources);
        }
        
        public void AddMergedIssues(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            base.Channel.AddMergedIssues(userContext, importSessionId, resources);
        }
        
        public System.Threading.Tasks.Task AddMergedIssuesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            return base.Channel.AddMergedIssuesAsync(userContext, importSessionId, resources);
        }
        
        public void AddRemovedIssues(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            base.Channel.AddRemovedIssues(userContext, importSessionId, resources);
        }
        
        public System.Threading.Tasks.Task AddRemovedIssuesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            return base.Channel.AddRemovedIssuesAsync(userContext, importSessionId, resources);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ImportResult FinishImportResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            return base.Channel.FinishImportResources(userContext, importSessionId, moduleName, branchName, destinationFolderId, resources);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ImportResult> FinishImportResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string importSessionId, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.CheckoutResources resources) {
            return base.Channel.FinishImportResourcesAsync(userContext, importSessionId, moduleName, branchName, destinationFolderId, resources);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ExportModuleData[] GetModuleDataForFolder(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string folderId, bool includeSubFolders, bool excludeHistoryFolders, bool excludeHiddenItems) {
            return base.Channel.GetModuleDataForFolder(userContext, folderId, includeSubFolders, excludeHistoryFolders, excludeHiddenItems);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ExportModuleData[]> GetModuleDataForFolderAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string folderId, bool includeSubFolders, bool excludeHistoryFolders, bool excludeHiddenItems) {
            return base.Channel.GetModuleDataForFolderAsync(userContext, folderId, includeSubFolders, excludeHistoryFolders, excludeHiddenItems);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] GetCheckinInfos(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName) {
            return base.Channel.GetCheckinInfos(userContext, moduleName, branchName);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[]> GetCheckinInfosAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName) {
            return base.Channel.GetCheckinInfosAsync(userContext, moduleName, branchName);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.CheckinResult Checkin(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] infos, string notes) {
            return base.Channel.Checkin(userContext, moduleName, branchName, infos, notes);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.CheckinResult> CheckinAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] infos, string notes) {
            return base.Channel.CheckinAsync(userContext, moduleName, branchName, infos, notes);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] GetResourcesToRevert(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName) {
            return base.Channel.GetResourcesToRevert(userContext, moduleName, branchName);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[]> GetResourcesToRevertAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName) {
            return base.Channel.GetResourcesToRevertAsync(userContext, moduleName, branchName);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ImportResult Revert(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] resources) {
            return base.Channel.Revert(userContext, moduleName, branchName, destinationFolderId, resources);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ImportResult> RevertAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, string destinationFolderId, ExampleRepoClient.DesignerRepositoryClient.ModuleInfoFile[] resources) {
            return base.Channel.RevertAsync(userContext, moduleName, branchName, destinationFolderId, resources);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ModuleCheckinInfo[] GetChekinLogs(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, int count) {
            return base.Channel.GetChekinLogs(userContext, moduleName, branchName, count);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleCheckinInfo[]> GetChekinLogsAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName, string branchName, int count) {
            return base.Channel.GetChekinLogsAsync(userContext, moduleName, branchName, count);
        }
        
        public void CalculateDifferences(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName) {
            base.Channel.CalculateDifferences(userContext, moduleName);
        }
        
        public System.Threading.Tasks.Task CalculateDifferencesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string moduleName) {
            return base.Channel.CalculateDifferencesAsync(userContext, moduleName);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.DiffModuleClientInfo GetLastModuleDifferences(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.GetLastModuleDifferences(userContext);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.DiffModuleClientInfo> GetLastModuleDifferencesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.GetLastModuleDifferencesAsync(userContext);
        }
        
        public bool UserHasValidCredentialsForRepository(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.UserHasValidCredentialsForRepository(userContext);
        }
        
        public System.Threading.Tasks.Task<bool> UserHasValidCredentialsForRepositoryAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.UserHasValidCredentialsForRepositoryAsync(userContext);
        }
        
        public void UpdateUserCredentials(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string email, string password, bool updateAccount) {
            base.Channel.UpdateUserCredentials(userContext, email, password, updateAccount);
        }
        
        public System.Threading.Tasks.Task UpdateUserCredentialsAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string email, string password, bool updateAccount) {
            return base.Channel.UpdateUserCredentialsAsync(userContext, email, password, updateAccount);
        }
        
        public string GetRepositoryUser(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.GetRepositoryUser(userContext);
        }
        
        public System.Threading.Tasks.Task<string> GetRepositoryUserAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.GetRepositoryUserAsync(userContext);
        }
        
        public void ResetCachedCredentials(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            base.Channel.ResetCachedCredentials(userContext);
        }
        
        public System.Threading.Tasks.Task ResetCachedCredentialsAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext) {
            return base.Channel.ResetCachedCredentialsAsync(userContext);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[] GetServerRemovedResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] removedClientResources) {
            return base.Channel.GetServerRemovedResources(userContext, removedClientResources);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ResourceCheckinInfo[]> GetServerRemovedResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] removedClientResources) {
            return base.Channel.GetServerRemovedResourcesAsync(userContext, removedClientResources);
        }
        
        public ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] GetClientRemovedResources(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string entityId, string typeName) {
            return base.Channel.GetClientRemovedResources(userContext, entityId, typeName);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.DesignerRepositoryClient.ModuleResource[]> GetClientRemovedResourcesAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, string entityId, string typeName) {
            return base.Channel.GetClientRemovedResourcesAsync(userContext, entityId, typeName);
        }
        
        public void RemoveFromClient(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] resources) {
            base.Channel.RemoveFromClient(userContext, resources);
        }
        
        public System.Threading.Tasks.Task RemoveFromClientAsync(ExampleRepoClient.DesignerRepositoryClient.AbstractUserContext userContext, ExampleRepoClient.DesignerRepositoryClient.ModuleResource[] resources) {
            return base.Channel.RemoveFromClientAsync(userContext, resources);
        }
    }
}
