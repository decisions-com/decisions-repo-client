//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExampleRepoClient.httpsRepo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.WindowsLoginUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.WebHostWrappedUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.GuestUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.ImpersonateUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.PasswordCredentialsUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.FacebookCredentialsUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.SecuredUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.LocalImpersonationContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.LocalMachineUserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.SessionUserContext))]
    public partial class AbstractUserContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrowserUserAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientEventSessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.DisplayType DisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StudioPortalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrowserUserAgent {
            get {
                return this.BrowserUserAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.BrowserUserAgentField, value) != true)) {
                    this.BrowserUserAgentField = value;
                    this.RaisePropertyChanged("BrowserUserAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientEventSessionId {
            get {
                return this.ClientEventSessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientEventSessionIdField, value) != true)) {
                    this.ClientEventSessionIdField = value;
                    this.RaisePropertyChanged("ClientEventSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.DisplayType DisplayType {
            get {
                return this.DisplayTypeField;
            }
            set {
                if ((this.DisplayTypeField.Equals(value) != true)) {
                    this.DisplayTypeField = value;
                    this.RaisePropertyChanged("DisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StudioPortal {
            get {
                return this.StudioPortalField;
            }
            set {
                if ((this.StudioPortalField.Equals(value) != true)) {
                    this.StudioPortalField = value;
                    this.RaisePropertyChanged("StudioPortal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsLoginUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class WindowsLoginUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebHostWrappedUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class WebHostWrappedUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallingIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.AbstractUserContext WrappedUserContextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallingIP {
            get {
                return this.CallingIPField;
            }
            set {
                if ((object.ReferenceEquals(this.CallingIPField, value) != true)) {
                    this.CallingIPField = value;
                    this.RaisePropertyChanged("CallingIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.AbstractUserContext WrappedUserContext {
            get {
                return this.WrappedUserContextField;
            }
            set {
                if ((object.ReferenceEquals(this.WrappedUserContextField, value) != true)) {
                    this.WrappedUserContextField = value;
                    this.RaisePropertyChanged("WrappedUserContext");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuestUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class GuestUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImpersonateUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class ImpersonateUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.AbstractUserContext RealUserContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.UserIdentifierType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.AbstractUserContext RealUserContext {
            get {
                return this.RealUserContextField;
            }
            set {
                if ((object.ReferenceEquals(this.RealUserContextField, value) != true)) {
                    this.RealUserContextField = value;
                    this.RaisePropertyChanged("RealUserContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.UserIdentifierType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordCredentialsUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class PasswordCredentialsUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacebookCredentialsUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class FacebookCredentialsUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacebookIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacebookID {
            get {
                return this.FacebookIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookIDField, value) != true)) {
                    this.FacebookIDField = value;
                    this.RaisePropertyChanged("FacebookID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecuredUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class SecuredUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuredKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuredKey {
            get {
                return this.SecuredKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuredKeyField, value) != true)) {
                    this.SecuredKeyField = value;
                    this.RaisePropertyChanged("SecuredKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalImpersonationContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class LocalImpersonationContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalMachineUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class LocalMachineUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionUserContext", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class SessionUserContext : ExampleRepoClient.httpsRepo.AbstractUserContext {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionValue {
            get {
                return this.SessionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionValueField, value) != true)) {
                    this.SessionValueField = value;
                    this.RaisePropertyChanged("SessionValue");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Folder")]
    public enum DisplayType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Silverlight = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Html = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HtmlWithSilverlight = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HtmlMobile = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HtmlTablet = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserIdentifierType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    public enum UserIdentifierType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class FrameworkFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    [System.SerializableAttribute()]
    public partial class Account : ExampleRepoClient.httpsRepo.AbstractFolderEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountPictureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.UserAuthenticationType AuthenticationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanUsePortalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistinguishedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeFolderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastPasswordResetDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastUSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MustChangePasswordOnNextLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeverExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PermittedIPAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityAnswer2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityAnswer3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuestion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuestion3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimezoneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.AccountType UserTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountPictureID {
            get {
                return this.AccountPictureIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountPictureIDField, value) != true)) {
                    this.AccountPictureIDField = value;
                    this.RaisePropertyChanged("AccountPictureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.UserAuthenticationType AuthenticationType {
            get {
                return this.AuthenticationTypeField;
            }
            set {
                if ((this.AuthenticationTypeField.Equals(value) != true)) {
                    this.AuthenticationTypeField = value;
                    this.RaisePropertyChanged("AuthenticationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanUsePortal {
            get {
                return this.CanUsePortalField;
            }
            set {
                if ((this.CanUsePortalField.Equals(value) != true)) {
                    this.CanUsePortalField = value;
                    this.RaisePropertyChanged("CanUsePortal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultFolderId {
            get {
                return this.DefaultFolderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultFolderIdField, value) != true)) {
                    this.DefaultFolderIdField = value;
                    this.RaisePropertyChanged("DefaultFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistinguishedName {
            get {
                return this.DistinguishedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistinguishedNameField, value) != true)) {
                    this.DistinguishedNameField = value;
                    this.RaisePropertyChanged("DistinguishedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIDField, value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstLoginDate {
            get {
                return this.FirstLoginDateField;
            }
            set {
                if ((this.FirstLoginDateField.Equals(value) != true)) {
                    this.FirstLoginDateField = value;
                    this.RaisePropertyChanged("FirstLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeFolderID {
            get {
                return this.HomeFolderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeFolderIDField, value) != true)) {
                    this.HomeFolderIDField = value;
                    this.RaisePropertyChanged("HomeFolderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfirmed {
            get {
                return this.IsConfirmedField;
            }
            set {
                if ((this.IsConfirmedField.Equals(value) != true)) {
                    this.IsConfirmedField = value;
                    this.RaisePropertyChanged("IsConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPasswordResetDate {
            get {
                return this.LastPasswordResetDateField;
            }
            set {
                if ((this.LastPasswordResetDateField.Equals(value) != true)) {
                    this.LastPasswordResetDateField = value;
                    this.RaisePropertyChanged("LastPasswordResetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastUSN {
            get {
                return this.LastUSNField;
            }
            set {
                if ((this.LastUSNField.Equals(value) != true)) {
                    this.LastUSNField = value;
                    this.RaisePropertyChanged("LastUSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationIdField, value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MustChangePasswordOnNextLogin {
            get {
                return this.MustChangePasswordOnNextLoginField;
            }
            set {
                if ((this.MustChangePasswordOnNextLoginField.Equals(value) != true)) {
                    this.MustChangePasswordOnNextLoginField = value;
                    this.RaisePropertyChanged("MustChangePasswordOnNextLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeverExpires {
            get {
                return this.NeverExpiresField;
            }
            set {
                if ((this.NeverExpiresField.Equals(value) != true)) {
                    this.NeverExpiresField = value;
                    this.RaisePropertyChanged("NeverExpires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfAttempts {
            get {
                return this.NumberOfAttemptsField;
            }
            set {
                if ((this.NumberOfAttemptsField.Equals(value) != true)) {
                    this.NumberOfAttemptsField = value;
                    this.RaisePropertyChanged("NumberOfAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PermittedIPAddresses {
            get {
                return this.PermittedIPAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PermittedIPAddressesField, value) != true)) {
                    this.PermittedIPAddressesField = value;
                    this.RaisePropertyChanged("PermittedIPAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SID {
            get {
                return this.SIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDField, value) != true)) {
                    this.SIDField = value;
                    this.RaisePropertyChanged("SID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAnswer {
            get {
                return this.SecurityAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAnswerField, value) != true)) {
                    this.SecurityAnswerField = value;
                    this.RaisePropertyChanged("SecurityAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAnswer2 {
            get {
                return this.SecurityAnswer2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAnswer2Field, value) != true)) {
                    this.SecurityAnswer2Field = value;
                    this.RaisePropertyChanged("SecurityAnswer2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAnswer3 {
            get {
                return this.SecurityAnswer3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAnswer3Field, value) != true)) {
                    this.SecurityAnswer3Field = value;
                    this.RaisePropertyChanged("SecurityAnswer3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion {
            get {
                return this.SecurityQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestionField, value) != true)) {
                    this.SecurityQuestionField = value;
                    this.RaisePropertyChanged("SecurityQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion2 {
            get {
                return this.SecurityQuestion2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestion2Field, value) != true)) {
                    this.SecurityQuestion2Field = value;
                    this.RaisePropertyChanged("SecurityQuestion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion3 {
            get {
                return this.SecurityQuestion3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestion3Field, value) != true)) {
                    this.SecurityQuestion3Field = value;
                    this.RaisePropertyChanged("SecurityQuestion3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceSystemId {
            get {
                return this.SourceSystemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemIdField, value) != true)) {
                    this.SourceSystemIdField = value;
                    this.RaisePropertyChanged("SourceSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimezoneName {
            get {
                return this.TimezoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimezoneNameField, value) != true)) {
                    this.TimezoneNameField = value;
                    this.RaisePropertyChanged("TimezoneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCulture {
            get {
                return this.UserCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCultureField, value) != true)) {
                    this.UserCultureField = value;
                    this.RaisePropertyChanged("UserCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserIdentifier {
            get {
                return this.UserIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdentifierField, value) != true)) {
                    this.UserIdentifierField = value;
                    this.RaisePropertyChanged("UserIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.AccountType UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseORMEntity", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.Data.ORMapper")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Phone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.EmailAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.InstantMessengerAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.OtherContact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.BaseORMEntityWithLogicalDelete))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractEntityExtensionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.PersonData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractFolderEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractModuleRights))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Account))]
    public partial class BaseORMEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractContactEntity", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Phone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.EmailAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.InstantMessengerAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.OtherContact))]
    public partial class AbstractContactEntity : ExampleRepoClient.httpsRepo.BaseORMEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.ContactInfoType ContactInfoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactPreferenceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPriorityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactPriorityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSecuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.ContactInfoType ContactInfoType {
            get {
                return this.ContactInfoTypeField;
            }
            set {
                if ((this.ContactInfoTypeField.Equals(value) != true)) {
                    this.ContactInfoTypeField = value;
                    this.RaisePropertyChanged("ContactInfoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactPreferenceOrder {
            get {
                return this.ContactPreferenceOrderField;
            }
            set {
                if ((this.ContactPreferenceOrderField.Equals(value) != true)) {
                    this.ContactPreferenceOrderField = value;
                    this.RaisePropertyChanged("ContactPreferenceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPriorityID {
            get {
                return this.ContactPriorityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPriorityIDField, value) != true)) {
                    this.ContactPriorityIDField = value;
                    this.RaisePropertyChanged("ContactPriorityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPriorityName {
            get {
                return this.ContactPriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPriorityNameField, value) != true)) {
                    this.ContactPriorityNameField = value;
                    this.RaisePropertyChanged("ContactPriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactPriorityOrder {
            get {
                return this.ContactPriorityOrderField;
            }
            set {
                if ((this.ContactPriorityOrderField.Equals(value) != true)) {
                    this.ContactPriorityOrderField = value;
                    this.RaisePropertyChanged("ContactPriorityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSecured {
            get {
                return this.IsSecuredField;
            }
            set {
                if ((this.IsSecuredField.Equals(value) != true)) {
                    this.IsSecuredField = value;
                    this.RaisePropertyChanged("IsSecured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDField, value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    public partial class Address : ExampleRepoClient.httpsRepo.AbstractContactEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.AddressType TypeOfAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressIdField, value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine3 {
            get {
                return this.AddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine3Field, value) != true)) {
                    this.AddressLine3Field = value;
                    this.RaisePropertyChanged("AddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityInfoID {
            get {
                return this.CityInfoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CityInfoIDField, value) != true)) {
                    this.CityInfoIDField = value;
                    this.RaisePropertyChanged("CityInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryInfoID {
            get {
                return this.CountryInfoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryInfoIDField, value) != true)) {
                    this.CountryInfoIDField = value;
                    this.RaisePropertyChanged("CountryInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountyInfoID {
            get {
                return this.CountyInfoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyInfoIDField, value) != true)) {
                    this.CountyInfoIDField = value;
                    this.RaisePropertyChanged("CountyInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimary {
            get {
                return this.IsPrimaryField;
            }
            set {
                if ((this.IsPrimaryField.Equals(value) != true)) {
                    this.IsPrimaryField = value;
                    this.RaisePropertyChanged("IsPrimary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateInfoID {
            get {
                return this.StateInfoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StateInfoIDField, value) != true)) {
                    this.StateInfoIDField = value;
                    this.RaisePropertyChanged("StateInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.AddressType TypeOfAddress {
            get {
                return this.TypeOfAddressField;
            }
            set {
                if ((this.TypeOfAddressField.Equals(value) != true)) {
                    this.TypeOfAddressField = value;
                    this.RaisePropertyChanged("TypeOfAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phone", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    public partial class Phone : ExampleRepoClient.httpsRepo.AbstractContactEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptSMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.PhoneType TypeOfPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcceptSMS {
            get {
                return this.AcceptSMSField;
            }
            set {
                if ((this.AcceptSMSField.Equals(value) != true)) {
                    this.AcceptSMSField = value;
                    this.RaisePropertyChanged("AcceptSMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasExtension {
            get {
                return this.HasExtensionField;
            }
            set {
                if ((this.HasExtensionField.Equals(value) != true)) {
                    this.HasExtensionField = value;
                    this.RaisePropertyChanged("HasExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimary {
            get {
                return this.IsPrimaryField;
            }
            set {
                if ((this.IsPrimaryField.Equals(value) != true)) {
                    this.IsPrimaryField = value;
                    this.RaisePropertyChanged("IsPrimary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneId {
            get {
                return this.PhoneIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneIdField, value) != true)) {
                    this.PhoneIdField = value;
                    this.RaisePropertyChanged("PhoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsCarrier {
            get {
                return this.SmsCarrierField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsCarrierField, value) != true)) {
                    this.SmsCarrierField = value;
                    this.RaisePropertyChanged("SmsCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.PhoneType TypeOfPhone {
            get {
                return this.TypeOfPhoneField;
            }
            set {
                if ((this.TypeOfPhoneField.Equals(value) != true)) {
                    this.TypeOfPhoneField = value;
                    this.RaisePropertyChanged("TypeOfPhone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAddress", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    public partial class EmailAddress : ExampleRepoClient.httpsRepo.AbstractContactEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimary {
            get {
                return this.IsPrimaryField;
            }
            set {
                if ((this.IsPrimaryField.Equals(value) != true)) {
                    this.IsPrimaryField = value;
                    this.RaisePropertyChanged("IsPrimary");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstantMessengerAddress", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    public partial class InstantMessengerAddress : ExampleRepoClient.httpsRepo.AbstractContactEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstantMessengerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstantMessengerUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.InstantMessengerNetwork NetworkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstantMessengerId {
            get {
                return this.InstantMessengerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InstantMessengerIdField, value) != true)) {
                    this.InstantMessengerIdField = value;
                    this.RaisePropertyChanged("InstantMessengerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstantMessengerUserName {
            get {
                return this.InstantMessengerUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstantMessengerUserNameField, value) != true)) {
                    this.InstantMessengerUserNameField = value;
                    this.RaisePropertyChanged("InstantMessengerUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.InstantMessengerNetwork Network {
            get {
                return this.NetworkField;
            }
            set {
                if ((this.NetworkField.Equals(value) != true)) {
                    this.NetworkField = value;
                    this.RaisePropertyChanged("Network");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherContact", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    public partial class OtherContact : ExampleRepoClient.httpsRepo.AbstractContactEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherContactTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherContactTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherContactId {
            get {
                return this.OtherContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherContactIdField, value) != true)) {
                    this.OtherContactIdField = value;
                    this.RaisePropertyChanged("OtherContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherContactTypeId {
            get {
                return this.OtherContactTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherContactTypeIdField, value) != true)) {
                    this.OtherContactTypeIdField = value;
                    this.RaisePropertyChanged("OtherContactTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherContactTypeName {
            get {
                return this.OtherContactTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherContactTypeNameField, value) != true)) {
                    this.OtherContactTypeNameField = value;
                    this.RaisePropertyChanged("OtherContactTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseORMEntityWithLogicalDelete", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.Data.ORMapper")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractEntityExtensionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.PersonData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractFolderEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractModuleRights))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Account))]
    public partial class BaseORMEntityWithLogicalDelete : ExampleRepoClient.httpsRepo.BaseORMEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeletedOnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedByField, value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeletedOn {
            get {
                return this.DeletedOnField;
            }
            set {
                if ((this.DeletedOnField.Equals(value) != true)) {
                    this.DeletedOnField = value;
                    this.RaisePropertyChanged("DeletedOn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractEntityExtensionData", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.PersonData))]
    public partial class AbstractEntityExtensionData : ExampleRepoClient.httpsRepo.BaseORMEntityWithLogicalDelete {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityIdField, value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityTypeName {
            get {
                return this.EntityTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityTypeNameField, value) != true)) {
                    this.EntityTypeNameField = value;
                    this.RaisePropertyChanged("EntityTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtensionId {
            get {
                return this.ExtensionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionIdField, value) != true)) {
                    this.ExtensionIdField = value;
                    this.RaisePropertyChanged("ExtensionId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonData", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    [System.SerializableAttribute()]
    public partial class PersonData : ExampleRepoClient.httpsRepo.AbstractEntityExtensionData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractEntity", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractFolderEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractModuleRights))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Account))]
    public partial class AbstractEntity : ExampleRepoClient.httpsRepo.BaseORMEntityWithLogicalDelete {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllTagsDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchivedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArchivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllTagsData {
            get {
                return this.AllTagsDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AllTagsDataField, value) != true)) {
                    this.AllTagsDataField = value;
                    this.RaisePropertyChanged("AllTagsData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArchivedBy {
            get {
                return this.ArchivedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchivedByField, value) != true)) {
                    this.ArchivedByField = value;
                    this.RaisePropertyChanged("ArchivedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArchivedDate {
            get {
                return this.ArchivedDateField;
            }
            set {
                if ((this.ArchivedDateField.Equals(value) != true)) {
                    this.ArchivedDateField = value;
                    this.RaisePropertyChanged("ArchivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOnDate {
            get {
                return this.CreatedOnDateField;
            }
            set {
                if ((this.CreatedOnDateField.Equals(value) != true)) {
                    this.CreatedOnDateField = value;
                    this.RaisePropertyChanged("CreatedOnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityDescription {
            get {
                return this.EntityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityDescriptionField, value) != true)) {
                    this.EntityDescriptionField = value;
                    this.RaisePropertyChanged("EntityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractFolderEntity", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.AbstractModuleRights))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExampleRepoClient.httpsRepo.Account))]
    public partial class AbstractFolderEntity : ExampleRepoClient.httpsRepo.AbstractEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdministratorViewOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityFolderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoryFolderIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdministratorViewOnly {
            get {
                return this.AdministratorViewOnlyField;
            }
            set {
                if ((this.AdministratorViewOnlyField.Equals(value) != true)) {
                    this.AdministratorViewOnlyField = value;
                    this.RaisePropertyChanged("AdministratorViewOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityFolderID {
            get {
                return this.EntityFolderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityFolderIDField, value) != true)) {
                    this.EntityFolderIDField = value;
                    this.RaisePropertyChanged("EntityFolderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HistoryFolderID {
            get {
                return this.HistoryFolderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoryFolderIDField, value) != true)) {
                    this.HistoryFolderIDField = value;
                    this.RaisePropertyChanged("HistoryFolderID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    [System.SerializableAttribute()]
    public partial class Group : ExampleRepoClient.httpsRepo.AbstractFolderEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddingAccountToSubGroupAddsToBaseGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddingAccountsOnlyInSubGroupIsAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddingToBaseGroupAddsToSubGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.GroupBrowserSilverlightBehavior BrowserBehaviorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultUrlParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistinguishedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LDAPObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LDAPSourceServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastUSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemoveBaseGroupAccountsOnUnhookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemovingAccountInSubGroupRemovesFromBaseGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemovingFromBaseGroupRemovesFromSubGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpecifyLinkedGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpecifySyncGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddingAccountToSubGroupAddsToBaseGroup {
            get {
                return this.AddingAccountToSubGroupAddsToBaseGroupField;
            }
            set {
                if ((this.AddingAccountToSubGroupAddsToBaseGroupField.Equals(value) != true)) {
                    this.AddingAccountToSubGroupAddsToBaseGroupField = value;
                    this.RaisePropertyChanged("AddingAccountToSubGroupAddsToBaseGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddingAccountsOnlyInSubGroupIsAllowed {
            get {
                return this.AddingAccountsOnlyInSubGroupIsAllowedField;
            }
            set {
                if ((this.AddingAccountsOnlyInSubGroupIsAllowedField.Equals(value) != true)) {
                    this.AddingAccountsOnlyInSubGroupIsAllowedField = value;
                    this.RaisePropertyChanged("AddingAccountsOnlyInSubGroupIsAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddingToBaseGroupAddsToSubGroup {
            get {
                return this.AddingToBaseGroupAddsToSubGroupField;
            }
            set {
                if ((this.AddingToBaseGroupAddsToSubGroupField.Equals(value) != true)) {
                    this.AddingToBaseGroupAddsToSubGroupField = value;
                    this.RaisePropertyChanged("AddingToBaseGroupAddsToSubGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseGroupId {
            get {
                return this.BaseGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseGroupIdField, value) != true)) {
                    this.BaseGroupIdField = value;
                    this.RaisePropertyChanged("BaseGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.GroupBrowserSilverlightBehavior BrowserBehavior {
            get {
                return this.BrowserBehaviorField;
            }
            set {
                if ((this.BrowserBehaviorField.Equals(value) != true)) {
                    this.BrowserBehaviorField = value;
                    this.RaisePropertyChanged("BrowserBehavior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultFolderId {
            get {
                return this.DefaultFolderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultFolderIdField, value) != true)) {
                    this.DefaultFolderIdField = value;
                    this.RaisePropertyChanged("DefaultFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultUrlParameters {
            get {
                return this.DefaultUrlParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultUrlParametersField, value) != true)) {
                    this.DefaultUrlParametersField = value;
                    this.RaisePropertyChanged("DefaultUrlParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistinguishedName {
            get {
                return this.DistinguishedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistinguishedNameField, value) != true)) {
                    this.DistinguishedNameField = value;
                    this.RaisePropertyChanged("DistinguishedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIdField, value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LDAPObjectId {
            get {
                return this.LDAPObjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LDAPObjectIdField, value) != true)) {
                    this.LDAPObjectIdField = value;
                    this.RaisePropertyChanged("LDAPObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LDAPSourceServerId {
            get {
                return this.LDAPSourceServerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LDAPSourceServerIdField, value) != true)) {
                    this.LDAPSourceServerIdField = value;
                    this.RaisePropertyChanged("LDAPSourceServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastUSN {
            get {
                return this.LastUSNField;
            }
            set {
                if ((this.LastUSNField.Equals(value) != true)) {
                    this.LastUSNField = value;
                    this.RaisePropertyChanged("LastUSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RemoveBaseGroupAccountsOnUnhook {
            get {
                return this.RemoveBaseGroupAccountsOnUnhookField;
            }
            set {
                if ((this.RemoveBaseGroupAccountsOnUnhookField.Equals(value) != true)) {
                    this.RemoveBaseGroupAccountsOnUnhookField = value;
                    this.RaisePropertyChanged("RemoveBaseGroupAccountsOnUnhook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RemovingAccountInSubGroupRemovesFromBaseGroup {
            get {
                return this.RemovingAccountInSubGroupRemovesFromBaseGroupField;
            }
            set {
                if ((this.RemovingAccountInSubGroupRemovesFromBaseGroupField.Equals(value) != true)) {
                    this.RemovingAccountInSubGroupRemovesFromBaseGroupField = value;
                    this.RaisePropertyChanged("RemovingAccountInSubGroupRemovesFromBaseGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RemovingFromBaseGroupRemovesFromSubGroup {
            get {
                return this.RemovingFromBaseGroupRemovesFromSubGroupField;
            }
            set {
                if ((this.RemovingFromBaseGroupRemovesFromSubGroupField.Equals(value) != true)) {
                    this.RemovingFromBaseGroupRemovesFromSubGroupField = value;
                    this.RaisePropertyChanged("RemovingFromBaseGroupRemovesFromSubGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpecifyLinkedGroups {
            get {
                return this.SpecifyLinkedGroupsField;
            }
            set {
                if ((this.SpecifyLinkedGroupsField.Equals(value) != true)) {
                    this.SpecifyLinkedGroupsField = value;
                    this.RaisePropertyChanged("SpecifyLinkedGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpecifySyncGroup {
            get {
                return this.SpecifySyncGroupField;
            }
            set {
                if ((this.SpecifySyncGroupField.Equals(value) != true)) {
                    this.SpecifySyncGroupField = value;
                    this.RaisePropertyChanged("SpecifySyncGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractModuleRights", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer")]
    [System.SerializableAttribute()]
    public partial class AbstractModuleRights : ExampleRepoClient.httpsRepo.AbstractFolderEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRightsIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRightsID {
            get {
                return this.UserRightsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRightsIDField, value) != true)) {
                    this.UserRightsIDField = value;
                    this.RaisePropertyChanged("UserRightsID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAuthenticationType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    public enum UserAuthenticationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveDirectory = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Password = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facebook = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    public enum AccountType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Machine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Person = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfoType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    public enum ContactInfoType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantMessengerAddress = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    public enum AddressType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Office = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    public enum PhoneType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Office = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pager = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IpPhone = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstantMessengerNetwork", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Organization")]
    public enum InstantMessengerNetwork : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MSN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AOL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GoogleTalk = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yahoo = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupBrowserSilverlightBehavior", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Portal")]
    public enum GroupBrowserSilverlightBehavior : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseHTML = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseSL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseHTMLInstallSL = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryMatchType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.Data.ORMapper")]
    public enum QueryMatchType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equals = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualsWithoutCase = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contains = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainsWithoutCase = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotEqual = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThanOrEqualTo = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThanOrEqualTo = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThan = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThan = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exists = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotExist = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotNull = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNull = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualsToOtherField = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartsWith = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndsWith = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotContain = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotEndWith = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotStartWith = 18,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSearchReturn", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    [System.SerializableAttribute()]
    public partial class AccountSearchReturn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExampleRepoClient.httpsRepo.AccountIdentifier[] AccountIdentifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalCountAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExampleRepoClient.httpsRepo.AccountIdentifier[] AccountIdentifiers {
            get {
                return this.AccountIdentifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdentifiersField, value) != true)) {
                    this.AccountIdentifiersField = value;
                    this.RaisePropertyChanged("AccountIdentifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalCountAvailable {
            get {
                return this.TotalCountAvailableField;
            }
            set {
                if ((this.TotalCountAvailableField.Equals(value) != true)) {
                    this.TotalCountAvailableField = value;
                    this.RaisePropertyChanged("TotalCountAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountIdentifier", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    [System.SerializableAttribute()]
    public partial class AccountIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityIdentifier", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Folder")]
    [System.SerializableAttribute()]
    public partial class EntityIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountAndGroupsReturn", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Services." +
        "Accounts")]
    [System.SerializableAttribute()]
    public partial class AccountAndGroupsReturn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityActionType", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Actions")]
    public enum EntityActionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Silverlight = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebForm = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLI = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsFormsOffline = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mvc = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MvcMobile = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MvcTablet = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="httpsRepo.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetSessionUserContext", ReplyAction="http://tempuri.org/IAuthenticatedService/GetSessionUserContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.SessionUserContext GetSessionUserContext(string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetSessionUserContext", ReplyAction="http://tempuri.org/IAuthenticatedService/GetSessionUserContextResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> GetSessionUserContextAsync(string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetPasswordUserContext", ReplyAction="http://tempuri.org/IAuthenticatedService/GetPasswordUserContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.PasswordCredentialsUserContext GetPasswordUserContext(string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetPasswordUserContext", ReplyAction="http://tempuri.org/IAuthenticatedService/GetPasswordUserContextResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.PasswordCredentialsUserContext> GetPasswordUserContextAsync(string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetGuestUserContext", ReplyAction="http://tempuri.org/IAuthenticatedService/GetGuestUserContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.GuestUserContext GetGuestUserContext();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetGuestUserContext", ReplyAction="http://tempuri.org/IAuthenticatedService/GetGuestUserContextResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.GuestUserContext> GetGuestUserContextAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Exists", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/ExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool Exists(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Exists", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/ExistsResponse")]
        System.Threading.Tasks.Task<bool> ExistsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/GetByFolderID", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/GetByFolderIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account[] GetByFolderID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/GetByFolderID", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/GetByFolderIDResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetByFolderIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/GetByID", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetByID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/GetByID", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/GetByIDResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/GetAll", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/GetAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account[] GetAll(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/GetAll", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/GetAllResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetAllAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Save", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/SaveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void Save(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Save", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Delete", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void Delete(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Delete", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Search", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/SearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account[] Search(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchFor, ExampleRepoClient.httpsRepo.QueryMatchType matchType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseEntityServiceOf_Account/Search", ReplyAction="http://tempuri.org/IBaseEntityServiceOf_Account/SearchResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> SearchAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchFor, ExampleRepoClient.httpsRepo.QueryMatchType matchType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUser", ReplyAction="http://tempuri.org/IAccountService/LoginUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.SessionUserContext LoginUser(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUser", ReplyAction="http://tempuri.org/IAccountService/LoginUserResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginUserAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUserWithIP", ReplyAction="http://tempuri.org/IAccountService/LoginUserWithIPResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.SessionUserContext LoginUserWithIP(ExampleRepoClient.httpsRepo.AbstractUserContext context, string userIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUserWithIP", ReplyAction="http://tempuri.org/IAccountService/LoginUserWithIPResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginUserWithIPAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string userIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginWithoutSharedSession", ReplyAction="http://tempuri.org/IAccountService/LoginWithoutSharedSessionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.SessionUserContext LoginWithoutSharedSession(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginWithoutSharedSession", ReplyAction="http://tempuri.org/IAccountService/LoginWithoutSharedSessionResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginWithoutSharedSessionAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUserWithTimeZoneInfo", ReplyAction="http://tempuri.org/IAccountService/LoginUserWithTimeZoneInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.SessionUserContext LoginUserWithTimeZoneInfo(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUserWithTimeZoneInfo", ReplyAction="http://tempuri.org/IAccountService/LoginUserWithTimeZoneInfoResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginUserWithTimeZoneInfoAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginWithoutSharedSessionWithTimeZoneInfo", ReplyAction="http://tempuri.org/IAccountService/LoginWithoutSharedSessionWithTimeZoneInfoRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.SessionUserContext LoginWithoutSharedSessionWithTimeZoneInfo(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginWithoutSharedSessionWithTimeZoneInfo", ReplyAction="http://tempuri.org/IAccountService/LoginWithoutSharedSessionWithTimeZoneInfoRespo" +
            "nse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginWithoutSharedSessionWithTimeZoneInfoAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SpecifySessionTimezone", ReplyAction="http://tempuri.org/IAccountService/SpecifySessionTimezoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SpecifySessionTimezone(ExampleRepoClient.httpsRepo.SessionUserContext context, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SpecifySessionTimezone", ReplyAction="http://tempuri.org/IAccountService/SpecifySessionTimezoneResponse")]
        System.Threading.Tasks.Task SpecifySessionTimezoneAsync(ExampleRepoClient.httpsRepo.SessionUserContext context, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsInstanceUsingDefaultSettings", ReplyAction="http://tempuri.org/IAccountService/IsInstanceUsingDefaultSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool IsInstanceUsingDefaultSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsInstanceUsingDefaultSettings", ReplyAction="http://tempuri.org/IAccountService/IsInstanceUsingDefaultSettingsResponse")]
        System.Threading.Tasks.Task<bool> IsInstanceUsingDefaultSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetEmailAddress", ReplyAction="http://tempuri.org/IAccountService/SetEmailAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SetEmailAddress(ExampleRepoClient.httpsRepo.AbstractUserContext context, string accountId, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetEmailAddress", ReplyAction="http://tempuri.org/IAccountService/SetEmailAddressResponse")]
        System.Threading.Tasks.Task SetEmailAddressAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string accountId, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetMyEmailAddress", ReplyAction="http://tempuri.org/IAccountService/SetMyEmailAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SetMyEmailAddress(ExampleRepoClient.httpsRepo.AbstractUserContext context, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetMyEmailAddress", ReplyAction="http://tempuri.org/IAccountService/SetMyEmailAddressResponse")]
        System.Threading.Tasks.Task SetMyEmailAddressAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendUserOldPassword", ReplyAction="http://tempuri.org/IAccountService/SendUserOldPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SendUserOldPassword(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendUserOldPassword", ReplyAction="http://tempuri.org/IAccountService/SendUserOldPasswordResponse")]
        System.Threading.Tasks.Task SendUserOldPasswordAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendUserOldPasswordCustomText", ReplyAction="http://tempuri.org/IAccountService/SendUserOldPasswordCustomTextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SendUserOldPasswordCustomText(string emailAddress, string fromAddress, string subject, string bodyTextWithParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendUserOldPasswordCustomText", ReplyAction="http://tempuri.org/IAccountService/SendUserOldPasswordCustomTextResponse")]
        System.Threading.Tasks.Task SendUserOldPasswordCustomTextAsync(string emailAddress, string fromAddress, string subject, string bodyTextWithParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangeUserPassword", ReplyAction="http://tempuri.org/IAccountService/ChangeUserPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void ChangeUserPassword(string emailAddress, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangeUserPassword", ReplyAction="http://tempuri.org/IAccountService/ChangeUserPasswordResponse")]
        System.Threading.Tasks.Task ChangeUserPasswordAsync(string emailAddress, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ResetAndSendUserPassword", ReplyAction="http://tempuri.org/IAccountService/ResetAndSendUserPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void ResetAndSendUserPassword(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ResetAndSendUserPassword", ReplyAction="http://tempuri.org/IAccountService/ResetAndSendUserPasswordResponse")]
        System.Threading.Tasks.Task ResetAndSendUserPasswordAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ResetAndSendUserPasswordCustomText", ReplyAction="http://tempuri.org/IAccountService/ResetAndSendUserPasswordCustomTextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void ResetAndSendUserPasswordCustomText(string emailAddress, string fromAddress, string subject, string bodyTextWithParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ResetAndSendUserPasswordCustomText", ReplyAction="http://tempuri.org/IAccountService/ResetAndSendUserPasswordCustomTextResponse")]
        System.Threading.Tasks.Task ResetAndSendUserPasswordCustomTextAsync(string emailAddress, string fromAddress, string subject, string bodyTextWithParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckUserContext", ReplyAction="http://tempuri.org/IAccountService/CheckUserContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CheckUserContext(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckUserContext", ReplyAction="http://tempuri.org/IAccountService/CheckUserContextResponse")]
        System.Threading.Tasks.Task CheckUserContextAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountIDBySessionID", ReplyAction="http://tempuri.org/IAccountService/GetAccountIDBySessionIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string GetAccountIDBySessionID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountIDBySessionID", ReplyAction="http://tempuri.org/IAccountService/GetAccountIDBySessionIDResponse")]
        System.Threading.Tasks.Task<string> GetAccountIDBySessionIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetCurrentAccountID", ReplyAction="http://tempuri.org/IAccountService/GetCurrentAccountIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string GetCurrentAccountID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetCurrentAccountID", ReplyAction="http://tempuri.org/IAccountService/GetCurrentAccountIDResponse")]
        System.Threading.Tasks.Task<string> GetCurrentAccountIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetCurrentAccount", ReplyAction="http://tempuri.org/IAccountService/GetCurrentAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetCurrentAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetCurrentAccount", ReplyAction="http://tempuri.org/IAccountService/GetCurrentAccountResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetCurrentAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Logout", ReplyAction="http://tempuri.org/IAccountService/LogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void Logout(ExampleRepoClient.httpsRepo.SessionUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Logout", ReplyAction="http://tempuri.org/IAccountService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(ExampleRepoClient.httpsRepo.SessionUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LogoutBySessionId", ReplyAction="http://tempuri.org/IAccountService/LogoutBySessionIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void LogoutBySessionId(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LogoutBySessionId", ReplyAction="http://tempuri.org/IAccountService/LogoutBySessionIdResponse")]
        System.Threading.Tasks.Task LogoutBySessionIdAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddNewAccountByGroupsIDs", ReplyAction="http://tempuri.org/IAccountService/AddNewAccountByGroupsIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void AddNewAccountByGroupsIDs(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, string[] memberOf, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddNewAccountByGroupsIDs", ReplyAction="http://tempuri.org/IAccountService/AddNewAccountByGroupsIDsResponse")]
        System.Threading.Tasks.Task AddNewAccountByGroupsIDsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, string[] memberOf, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddNewAccount", ReplyAction="http://tempuri.org/IAccountService/AddNewAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string AddNewAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, ExampleRepoClient.httpsRepo.Group[] memberOf, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddNewAccount", ReplyAction="http://tempuri.org/IAccountService/AddNewAccountResponse")]
        System.Threading.Tasks.Task<string> AddNewAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, ExampleRepoClient.httpsRepo.Group[] memberOf, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddNewAccountWihtoutUserContext", ReplyAction="http://tempuri.org/IAccountService/AddNewAccountWihtoutUserContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account AddNewAccountWihtoutUserContext(ExampleRepoClient.httpsRepo.Account accountObj, ExampleRepoClient.httpsRepo.Group[] memberOf, string password, ExampleRepoClient.httpsRepo.Address addressObj, ExampleRepoClient.httpsRepo.PersonData persoData, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddNewAccountWihtoutUserContext", ReplyAction="http://tempuri.org/IAccountService/AddNewAccountWihtoutUserContextResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> AddNewAccountWihtoutUserContextAsync(ExampleRepoClient.httpsRepo.Account accountObj, ExampleRepoClient.httpsRepo.Group[] memberOf, string password, ExampleRepoClient.httpsRepo.Address addressObj, ExampleRepoClient.httpsRepo.PersonData persoData, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetPassword", ReplyAction="http://tempuri.org/IAccountService/SetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SetPassword(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetPassword", ReplyAction="http://tempuri.org/IAccountService/SetPasswordResponse")]
        System.Threading.Tasks.Task SetPasswordAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangePassword", ReplyAction="http://tempuri.org/IAccountService/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void ChangePassword(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangePassword", ReplyAction="http://tempuri.org/IAccountService/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetByEmail", ReplyAction="http://tempuri.org/IAccountService/GetByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetByEmail(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetByEmail", ReplyAction="http://tempuri.org/IAccountService/GetByEmailResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByEmailAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetByUserIdentifier", ReplyAction="http://tempuri.org/IAccountService/GetByUserIdentifierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetByUserIdentifier(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string userIdentifier, bool includeDeletedAccounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetByUserIdentifier", ReplyAction="http://tempuri.org/IAccountService/GetByUserIdentifierResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByUserIdentifierAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string userIdentifier, bool includeDeletedAccounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetByFacebookID", ReplyAction="http://tempuri.org/IAccountService/GetByFacebookIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetByFacebookID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string facebookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetByFacebookID", ReplyAction="http://tempuri.org/IAccountService/GetByFacebookIDResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByFacebookIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string facebookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddModuleRights", ReplyAction="http://tempuri.org/IAccountService/AddModuleRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void AddModuleRights(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName, bool isModuleRightsAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddModuleRights", ReplyAction="http://tempuri.org/IAccountService/AddModuleRightsResponse")]
        System.Threading.Tasks.Task AddModuleRightsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName, bool isModuleRightsAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveModuleRights", ReplyAction="http://tempuri.org/IAccountService/RemoveModuleRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void RemoveModuleRights(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveModuleRights", ReplyAction="http://tempuri.org/IAccountService/RemoveModuleRightsResponse")]
        System.Threading.Tasks.Task RemoveModuleRightsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAllModuleRights", ReplyAction="http://tempuri.org/IAccountService/GetAllModuleRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string[] GetAllModuleRights(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAllModuleRights", ReplyAction="http://tempuri.org/IAccountService/GetAllModuleRightsResponse")]
        System.Threading.Tasks.Task<string[]> GetAllModuleRightsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountModuleRightsList", ReplyAction="http://tempuri.org/IAccountService/GetAccountModuleRightsListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string[] GetAccountModuleRightsList(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountModuleRightsList", ReplyAction="http://tempuri.org/IAccountService/GetAccountModuleRightsListResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountModuleRightsListAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetAccountGroups", ReplyAction="http://tempuri.org/IAccountService/SetAccountGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SetAccountGroups(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupsIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetAccountGroups", ReplyAction="http://tempuri.org/IAccountService/SetAccountGroupsResponse")]
        System.Threading.Tasks.Task SetAccountGroupsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupsIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAccountFromGroup", ReplyAction="http://tempuri.org/IAccountService/RemoveAccountFromGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void RemoveAccountFromGroup(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAccountFromGroup", ReplyAction="http://tempuri.org/IAccountService/RemoveAccountFromGroupResponse")]
        System.Threading.Tasks.Task RemoveAccountFromGroupAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountsForFolder", ReplyAction="http://tempuri.org/IAccountService/GetAccountsForFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.AccountSearchReturn GetAccountsForFolder(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderid, int desiredCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountsForFolder", ReplyAction="http://tempuri.org/IAccountService/GetAccountsForFolderResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountSearchReturn> GetAccountsForFolderAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderid, int desiredCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchAccounts", ReplyAction="http://tempuri.org/IAccountService/SearchAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.AccountSearchReturn SearchAccounts(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchAccounts", ReplyAction="http://tempuri.org/IAccountService/SearchAccountsResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountSearchReturn> SearchAccountsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchAccountsInFolderAndSubFolders", ReplyAction="http://tempuri.org/IAccountService/SearchAccountsInFolderAndSubFoldersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.AccountSearchReturn SearchAccountsInFolderAndSubFolders(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchAccountsInFolderAndSubFolders", ReplyAction="http://tempuri.org/IAccountService/SearchAccountsInFolderAndSubFoldersResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountSearchReturn> SearchAccountsInFolderAndSubFoldersAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSpecifiedAccountsICanImpersonate", ReplyAction="http://tempuri.org/IAccountService/GetSpecifiedAccountsICanImpersonateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account[] GetSpecifiedAccountsICanImpersonate(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSpecifiedAccountsICanImpersonate", ReplyAction="http://tempuri.org/IAccountService/GetSpecifiedAccountsICanImpersonateResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetSpecifiedAccountsICanImpersonateAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountIdsICanImpersonate", ReplyAction="http://tempuri.org/IAccountService/GetAccountIdsICanImpersonateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.EntityIdentifier[] GetAccountIdsICanImpersonate(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountIdsICanImpersonate", ReplyAction="http://tempuri.org/IAccountService/GetAccountIdsICanImpersonateResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.EntityIdentifier[]> GetAccountIdsICanImpersonateAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddModuleRightsInstance", ReplyAction="http://tempuri.org/IAccountService/AddModuleRightsInstanceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void AddModuleRightsInstance(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountID, ExampleRepoClient.httpsRepo.AbstractModuleRights rights);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddModuleRightsInstance", ReplyAction="http://tempuri.org/IAccountService/AddModuleRightsInstanceResponse")]
        System.Threading.Tasks.Task AddModuleRightsInstanceAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountID, ExampleRepoClient.httpsRepo.AbstractModuleRights rights);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountAndGroupInfo", ReplyAction="http://tempuri.org/IAccountService/GetAccountAndGroupInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.AccountAndGroupsReturn GetAccountAndGroupInfo(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string[] id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountAndGroupInfo", ReplyAction="http://tempuri.org/IAccountService/GetAccountAndGroupInfoResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountAndGroupsReturn> GetAccountAndGroupInfoAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string[] id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddAccountToGroups", ReplyAction="http://tempuri.org/IAccountService/AddAccountToGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void AddAccountToGroups(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddAccountToGroups", ReplyAction="http://tempuri.org/IAccountService/AddAccountToGroupsResponse")]
        System.Threading.Tasks.Task AddAccountToGroupsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SaveWithoutUserContext", ReplyAction="http://tempuri.org/IAccountService/SaveWithoutUserContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SaveWithoutUserContext(ExampleRepoClient.httpsRepo.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SaveWithoutUserContext", ReplyAction="http://tempuri.org/IAccountService/SaveWithoutUserContextResponse")]
        System.Threading.Tasks.Task SaveWithoutUserContextAsync(ExampleRepoClient.httpsRepo.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string UpdateAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountResponse")]
        System.Threading.Tasks.Task<string> UpdateAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByPhoneNumber", ReplyAction="http://tempuri.org/IAccountService/GetAccountByPhoneNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetAccountByPhoneNumber(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByPhoneNumber", ReplyAction="http://tempuri.org/IAccountService/GetAccountByPhoneNumberResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountByPhoneNumberAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ActivateAccount", ReplyAction="http://tempuri.org/IAccountService/ActivateAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void ActivateAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ActivateAccount", ReplyAction="http://tempuri.org/IAccountService/ActivateAccountResponse")]
        System.Threading.Tasks.Task ActivateAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeactivateAccount", ReplyAction="http://tempuri.org/IAccountService/DeactivateAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void DeactivateAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeactivateAccount", ReplyAction="http://tempuri.org/IAccountService/DeactivateAccountResponse")]
        System.Threading.Tasks.Task DeactivateAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckAccountIsConfirmed", ReplyAction="http://tempuri.org/IAccountService/CheckAccountIsConfirmedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool CheckAccountIsConfirmed(ExampleRepoClient.httpsRepo.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckAccountIsConfirmed", ReplyAction="http://tempuri.org/IAccountService/CheckAccountIsConfirmedResponse")]
        System.Threading.Tasks.Task<bool> CheckAccountIsConfirmedAsync(ExampleRepoClient.httpsRepo.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ConfirmAccount", ReplyAction="http://tempuri.org/IAccountService/ConfirmAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string ConfirmAccount(string confirmationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ConfirmAccount", ReplyAction="http://tempuri.org/IAccountService/ConfirmAccountResponse")]
        System.Threading.Tasks.Task<string> ConfirmAccountAsync(string confirmationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendConfirmationEmailToAccount", ReplyAction="http://tempuri.org/IAccountService/SendConfirmationEmailToAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SendConfirmationEmailToAccount(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendConfirmationEmailToAccount", ReplyAction="http://tempuri.org/IAccountService/SendConfirmationEmailToAccountResponse")]
        System.Threading.Tasks.Task SendConfirmationEmailToAccountAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendConfirmationEmailToAccountWithParameters", ReplyAction="http://tempuri.org/IAccountService/SendConfirmationEmailToAccountWithParametersRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SendConfirmationEmailToAccountWithParameters(string emailAddress, string[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendConfirmationEmailToAccountWithParameters", ReplyAction="http://tempuri.org/IAccountService/SendConfirmationEmailToAccountWithParametersRe" +
            "sponse")]
        System.Threading.Tasks.Task SendConfirmationEmailToAccountWithParametersAsync(string emailAddress, string[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CloneAccountConfiguration", ReplyAction="http://tempuri.org/IAccountService/CloneAccountConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CloneAccountConfiguration(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string importerAccountId, string exporterAccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CloneAccountConfiguration", ReplyAction="http://tempuri.org/IAccountService/CloneAccountConfigurationResponse")]
        System.Threading.Tasks.Task CloneAccountConfigurationAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string importerAccountId, string exporterAccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSecurityQuestionForAccount", ReplyAction="http://tempuri.org/IAccountService/GetSecurityQuestionForAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string GetSecurityQuestionForAccount(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSecurityQuestionForAccount", ReplyAction="http://tempuri.org/IAccountService/GetSecurityQuestionForAccountResponse")]
        System.Threading.Tasks.Task<string> GetSecurityQuestionForAccountAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ConfirmSecurityAnswerForAccount", ReplyAction="http://tempuri.org/IAccountService/ConfirmSecurityAnswerForAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool ConfirmSecurityAnswerForAccount(string emailAddress, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ConfirmSecurityAnswerForAccount", ReplyAction="http://tempuri.org/IAccountService/ConfirmSecurityAnswerForAccountResponse")]
        System.Threading.Tasks.Task<bool> ConfirmSecurityAnswerForAccountAsync(string emailAddress, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckSecurityAnswerAndSetPassword", ReplyAction="http://tempuri.org/IAccountService/CheckSecurityAnswerAndSetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CheckSecurityAnswerAndSetPassword(string emailAddress, string securityAnswer, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckSecurityAnswerAndSetPassword", ReplyAction="http://tempuri.org/IAccountService/CheckSecurityAnswerAndSetPasswordResponse")]
        System.Threading.Tasks.Task CheckSecurityAnswerAndSetPasswordAsync(string emailAddress, string securityAnswer, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSecurityQuestionsForAccount", ReplyAction="http://tempuri.org/IAccountService/GetSecurityQuestionsForAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string[] GetSecurityQuestionsForAccount(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSecurityQuestionsForAccount", ReplyAction="http://tempuri.org/IAccountService/GetSecurityQuestionsForAccountResponse")]
        System.Threading.Tasks.Task<string[]> GetSecurityQuestionsForAccountAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ConfirmSecurityQuestionAndAnswerForAccount", ReplyAction="http://tempuri.org/IAccountService/ConfirmSecurityQuestionAndAnswerForAccountResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool ConfirmSecurityQuestionAndAnswerForAccount(string emailAddress, string securityQuestion, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ConfirmSecurityQuestionAndAnswerForAccount", ReplyAction="http://tempuri.org/IAccountService/ConfirmSecurityQuestionAndAnswerForAccountResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> ConfirmSecurityQuestionAndAnswerForAccountAsync(string emailAddress, string securityQuestion, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckSecurityQuestionAndAnswerAndSetPassword", ReplyAction="http://tempuri.org/IAccountService/CheckSecurityQuestionAndAnswerAndSetPasswordRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CheckSecurityQuestionAndAnswerAndSetPassword(string emailAddress, string securityQuestion, string securityAnswer, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckSecurityQuestionAndAnswerAndSetPassword", ReplyAction="http://tempuri.org/IAccountService/CheckSecurityQuestionAndAnswerAndSetPasswordRe" +
            "sponse")]
        System.Threading.Tasks.Task CheckSecurityQuestionAndAnswerAndSetPasswordAsync(string emailAddress, string securityQuestion, string securityAnswer, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsValidPassword", ReplyAction="http://tempuri.org/IAccountService/IsValidPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool IsValidPassword(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsValidPassword", ReplyAction="http://tempuri.org/IAccountService/IsValidPasswordResponse")]
        System.Threading.Tasks.Task<bool> IsValidPasswordAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsValidActiveDirectoryUser", ReplyAction="http://tempuri.org/IAccountService/IsValidActiveDirectoryUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool IsValidActiveDirectoryUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsValidActiveDirectoryUser", ReplyAction="http://tempuri.org/IAccountService/IsValidActiveDirectoryUserResponse")]
        System.Threading.Tasks.Task<bool> IsValidActiveDirectoryUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByHomeFolderId", ReplyAction="http://tempuri.org/IAccountService/GetAccountByHomeFolderIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetAccountByHomeFolderId(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string homeFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByHomeFolderId", ReplyAction="http://tempuri.org/IAccountService/GetAccountByHomeFolderIdResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountByHomeFolderIdAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string homeFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByConfirmationCode", ReplyAction="http://tempuri.org/IAccountService/GetAccountByConfirmationCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetAccountByConfirmationCode(string confirmationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByConfirmationCode", ReplyAction="http://tempuri.org/IAccountService/GetAccountByConfirmationCodeResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountByConfirmationCodeAsync(string confirmationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAuthenticationId", ReplyAction="http://tempuri.org/IAccountService/GetAuthenticationIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        string GetAuthenticationId(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAuthenticationId", ReplyAction="http://tempuri.org/IAccountService/GetAuthenticationIdResponse")]
        System.Threading.Tasks.Task<string> GetAuthenticationIdAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountHasManager", ReplyAction="http://tempuri.org/IAccountService/AccountHasManagerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        bool AccountHasManager(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountHasManager", ReplyAction="http://tempuri.org/IAccountService/AccountHasManagerResponse")]
        System.Threading.Tasks.Task<bool> AccountHasManagerAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountManager", ReplyAction="http://tempuri.org/IAccountService/GetAccountManagerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetAccountManager(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountManager", ReplyAction="http://tempuri.org/IAccountService/GetAccountManagerResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountManagerAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountsByEmployeeId", ReplyAction="http://tempuri.org/IAccountService/GetAccountsByEmployeeIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account GetAccountsByEmployeeId(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountsByEmployeeId", ReplyAction="http://tempuri.org/IAccountService/GetAccountsByEmployeeIdResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountsByEmployeeIdAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountsByFirstAndLastName", ReplyAction="http://tempuri.org/IAccountService/GetAccountsByFirstAndLastNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        ExampleRepoClient.httpsRepo.Account[] GetAccountsByFirstAndLastName(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountsByFirstAndLastName", ReplyAction="http://tempuri.org/IAccountService/GetAccountsByFirstAndLastNameResponse")]
        System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetAccountsByFirstAndLastNameAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetCurrentAccountCulture", ReplyAction="http://tempuri.org/IAccountService/SetCurrentAccountCultureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SetCurrentAccountCulture(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string cultureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetCurrentAccountCulture", ReplyAction="http://tempuri.org/IAccountService/SetCurrentAccountCultureResponse")]
        System.Threading.Tasks.Task SetCurrentAccountCultureAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string cultureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetSessionActionsType", ReplyAction="http://tempuri.org/IAccountService/SetSessionActionsTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void SetSessionActionsType(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.EntityActionType[] actionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetSessionActionsType", ReplyAction="http://tempuri.org/IAccountService/SetSessionActionsTypeResponse")]
        System.Threading.Tasks.Task SetSessionActionsTypeAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.EntityActionType[] actionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckUserContextWithIpAddress", ReplyAction="http://tempuri.org/IAccountService/CheckUserContextWithIpAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExampleRepoClient.httpsRepo.FrameworkFault), Action="http://tempuri.org/FrameworkFaultAction", Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/DecisionsFramework.ServiceLayer.Utilities" +
            "")]
        void CheckUserContextWithIpAddress(ExampleRepoClient.httpsRepo.AbstractUserContext context, string callerIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CheckUserContextWithIpAddress", ReplyAction="http://tempuri.org/IAccountService/CheckUserContextWithIpAddressResponse")]
        System.Threading.Tasks.Task CheckUserContextWithIpAddressAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string callerIPAddress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : ExampleRepoClient.httpsRepo.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<ExampleRepoClient.httpsRepo.IAccountService>, ExampleRepoClient.httpsRepo.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExampleRepoClient.httpsRepo.SessionUserContext GetSessionUserContext(string userId, string password) {
            return base.Channel.GetSessionUserContext(userId, password);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> GetSessionUserContextAsync(string userId, string password) {
            return base.Channel.GetSessionUserContextAsync(userId, password);
        }
        
        public ExampleRepoClient.httpsRepo.PasswordCredentialsUserContext GetPasswordUserContext(string userId, string password) {
            return base.Channel.GetPasswordUserContext(userId, password);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.PasswordCredentialsUserContext> GetPasswordUserContextAsync(string userId, string password) {
            return base.Channel.GetPasswordUserContextAsync(userId, password);
        }
        
        public ExampleRepoClient.httpsRepo.GuestUserContext GetGuestUserContext() {
            return base.Channel.GetGuestUserContext();
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.GuestUserContext> GetGuestUserContextAsync() {
            return base.Channel.GetGuestUserContextAsync();
        }
        
        public bool Exists(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id) {
            return base.Channel.Exists(userContext, id);
        }
        
        public System.Threading.Tasks.Task<bool> ExistsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id) {
            return base.Channel.ExistsAsync(userContext, id);
        }
        
        public ExampleRepoClient.httpsRepo.Account[] GetByFolderID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderID) {
            return base.Channel.GetByFolderID(userContext, folderID);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetByFolderIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderID) {
            return base.Channel.GetByFolderIDAsync(userContext, folderID);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetByID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id) {
            return base.Channel.GetByID(userContext, id);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id) {
            return base.Channel.GetByIDAsync(userContext, id);
        }
        
        public ExampleRepoClient.httpsRepo.Account[] GetAll(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetAll(userContext);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetAllAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetAllAsync(userContext);
        }
        
        public void Save(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account entity) {
            base.Channel.Save(userContext, entity);
        }
        
        public System.Threading.Tasks.Task SaveAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account entity) {
            return base.Channel.SaveAsync(userContext, entity);
        }
        
        public void Delete(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id) {
            base.Channel.Delete(userContext, id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string id) {
            return base.Channel.DeleteAsync(userContext, id);
        }
        
        public ExampleRepoClient.httpsRepo.Account[] Search(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchFor, ExampleRepoClient.httpsRepo.QueryMatchType matchType) {
            return base.Channel.Search(userContext, searchFor, matchType);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> SearchAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchFor, ExampleRepoClient.httpsRepo.QueryMatchType matchType) {
            return base.Channel.SearchAsync(userContext, searchFor, matchType);
        }
        
        public ExampleRepoClient.httpsRepo.SessionUserContext LoginUser(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.LoginUser(context);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginUserAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.LoginUserAsync(context);
        }
        
        public ExampleRepoClient.httpsRepo.SessionUserContext LoginUserWithIP(ExampleRepoClient.httpsRepo.AbstractUserContext context, string userIPAddress) {
            return base.Channel.LoginUserWithIP(context, userIPAddress);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginUserWithIPAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string userIPAddress) {
            return base.Channel.LoginUserWithIPAsync(context, userIPAddress);
        }
        
        public ExampleRepoClient.httpsRepo.SessionUserContext LoginWithoutSharedSession(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.LoginWithoutSharedSession(context);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginWithoutSharedSessionAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.LoginWithoutSharedSessionAsync(context);
        }
        
        public ExampleRepoClient.httpsRepo.SessionUserContext LoginUserWithTimeZoneInfo(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId) {
            return base.Channel.LoginUserWithTimeZoneInfo(context, timeZoneId);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginUserWithTimeZoneInfoAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId) {
            return base.Channel.LoginUserWithTimeZoneInfoAsync(context, timeZoneId);
        }
        
        public ExampleRepoClient.httpsRepo.SessionUserContext LoginWithoutSharedSessionWithTimeZoneInfo(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId) {
            return base.Channel.LoginWithoutSharedSessionWithTimeZoneInfo(context, timeZoneId);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.SessionUserContext> LoginWithoutSharedSessionWithTimeZoneInfoAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string timeZoneId) {
            return base.Channel.LoginWithoutSharedSessionWithTimeZoneInfoAsync(context, timeZoneId);
        }
        
        public void SpecifySessionTimezone(ExampleRepoClient.httpsRepo.SessionUserContext context, string timeZoneId) {
            base.Channel.SpecifySessionTimezone(context, timeZoneId);
        }
        
        public System.Threading.Tasks.Task SpecifySessionTimezoneAsync(ExampleRepoClient.httpsRepo.SessionUserContext context, string timeZoneId) {
            return base.Channel.SpecifySessionTimezoneAsync(context, timeZoneId);
        }
        
        public bool IsInstanceUsingDefaultSettings() {
            return base.Channel.IsInstanceUsingDefaultSettings();
        }
        
        public System.Threading.Tasks.Task<bool> IsInstanceUsingDefaultSettingsAsync() {
            return base.Channel.IsInstanceUsingDefaultSettingsAsync();
        }
        
        public void SetEmailAddress(ExampleRepoClient.httpsRepo.AbstractUserContext context, string accountId, string newEmailAddress) {
            base.Channel.SetEmailAddress(context, accountId, newEmailAddress);
        }
        
        public System.Threading.Tasks.Task SetEmailAddressAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string accountId, string newEmailAddress) {
            return base.Channel.SetEmailAddressAsync(context, accountId, newEmailAddress);
        }
        
        public void SetMyEmailAddress(ExampleRepoClient.httpsRepo.AbstractUserContext context, string newEmailAddress) {
            base.Channel.SetMyEmailAddress(context, newEmailAddress);
        }
        
        public System.Threading.Tasks.Task SetMyEmailAddressAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string newEmailAddress) {
            return base.Channel.SetMyEmailAddressAsync(context, newEmailAddress);
        }
        
        public void SendUserOldPassword(string emailAddress) {
            base.Channel.SendUserOldPassword(emailAddress);
        }
        
        public System.Threading.Tasks.Task SendUserOldPasswordAsync(string emailAddress) {
            return base.Channel.SendUserOldPasswordAsync(emailAddress);
        }
        
        public void SendUserOldPasswordCustomText(string emailAddress, string fromAddress, string subject, string bodyTextWithParams) {
            base.Channel.SendUserOldPasswordCustomText(emailAddress, fromAddress, subject, bodyTextWithParams);
        }
        
        public System.Threading.Tasks.Task SendUserOldPasswordCustomTextAsync(string emailAddress, string fromAddress, string subject, string bodyTextWithParams) {
            return base.Channel.SendUserOldPasswordCustomTextAsync(emailAddress, fromAddress, subject, bodyTextWithParams);
        }
        
        public void ChangeUserPassword(string emailAddress, string oldPassword, string newPassword) {
            base.Channel.ChangeUserPassword(emailAddress, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangeUserPasswordAsync(string emailAddress, string oldPassword, string newPassword) {
            return base.Channel.ChangeUserPasswordAsync(emailAddress, oldPassword, newPassword);
        }
        
        public void ResetAndSendUserPassword(string emailAddress) {
            base.Channel.ResetAndSendUserPassword(emailAddress);
        }
        
        public System.Threading.Tasks.Task ResetAndSendUserPasswordAsync(string emailAddress) {
            return base.Channel.ResetAndSendUserPasswordAsync(emailAddress);
        }
        
        public void ResetAndSendUserPasswordCustomText(string emailAddress, string fromAddress, string subject, string bodyTextWithParams) {
            base.Channel.ResetAndSendUserPasswordCustomText(emailAddress, fromAddress, subject, bodyTextWithParams);
        }
        
        public System.Threading.Tasks.Task ResetAndSendUserPasswordCustomTextAsync(string emailAddress, string fromAddress, string subject, string bodyTextWithParams) {
            return base.Channel.ResetAndSendUserPasswordCustomTextAsync(emailAddress, fromAddress, subject, bodyTextWithParams);
        }
        
        public void CheckUserContext(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            base.Channel.CheckUserContext(context);
        }
        
        public System.Threading.Tasks.Task CheckUserContextAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.CheckUserContextAsync(context);
        }
        
        public string GetAccountIDBySessionID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string sessionID) {
            return base.Channel.GetAccountIDBySessionID(userContext, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountIDBySessionIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string sessionID) {
            return base.Channel.GetAccountIDBySessionIDAsync(userContext, sessionID);
        }
        
        public string GetCurrentAccountID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetCurrentAccountID(userContext);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentAccountIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetCurrentAccountIDAsync(userContext);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetCurrentAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetCurrentAccount(userContext);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetCurrentAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetCurrentAccountAsync(userContext);
        }
        
        public void Logout(ExampleRepoClient.httpsRepo.SessionUserContext context) {
            base.Channel.Logout(context);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(ExampleRepoClient.httpsRepo.SessionUserContext context) {
            return base.Channel.LogoutAsync(context);
        }
        
        public void LogoutBySessionId(string sessionId) {
            base.Channel.LogoutBySessionId(sessionId);
        }
        
        public System.Threading.Tasks.Task LogoutBySessionIdAsync(string sessionId) {
            return base.Channel.LogoutBySessionIdAsync(sessionId);
        }
        
        public void AddNewAccountByGroupsIDs(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, string[] memberOf, string password) {
            base.Channel.AddNewAccountByGroupsIDs(userContext, account, memberOf, password);
        }
        
        public System.Threading.Tasks.Task AddNewAccountByGroupsIDsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, string[] memberOf, string password) {
            return base.Channel.AddNewAccountByGroupsIDsAsync(userContext, account, memberOf, password);
        }
        
        public string AddNewAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, ExampleRepoClient.httpsRepo.Group[] memberOf, string password) {
            return base.Channel.AddNewAccount(userContext, account, memberOf, password);
        }
        
        public System.Threading.Tasks.Task<string> AddNewAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account, ExampleRepoClient.httpsRepo.Group[] memberOf, string password) {
            return base.Channel.AddNewAccountAsync(userContext, account, memberOf, password);
        }
        
        public ExampleRepoClient.httpsRepo.Account AddNewAccountWihtoutUserContext(ExampleRepoClient.httpsRepo.Account accountObj, ExampleRepoClient.httpsRepo.Group[] memberOf, string password, ExampleRepoClient.httpsRepo.Address addressObj, ExampleRepoClient.httpsRepo.PersonData persoData, string phoneNumber) {
            return base.Channel.AddNewAccountWihtoutUserContext(accountObj, memberOf, password, addressObj, persoData, phoneNumber);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> AddNewAccountWihtoutUserContextAsync(ExampleRepoClient.httpsRepo.Account accountObj, ExampleRepoClient.httpsRepo.Group[] memberOf, string password, ExampleRepoClient.httpsRepo.Address addressObj, ExampleRepoClient.httpsRepo.PersonData persoData, string phoneNumber) {
            return base.Channel.AddNewAccountWihtoutUserContextAsync(accountObj, memberOf, password, addressObj, persoData, phoneNumber);
        }
        
        public void SetPassword(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string newPassword) {
            base.Channel.SetPassword(userContext, accountId, newPassword);
        }
        
        public System.Threading.Tasks.Task SetPasswordAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string newPassword) {
            return base.Channel.SetPasswordAsync(userContext, accountId, newPassword);
        }
        
        public void ChangePassword(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string oldPassword, string newPassword) {
            base.Channel.ChangePassword(userContext, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(userContext, oldPassword, newPassword);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetByEmail(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress) {
            return base.Channel.GetByEmail(userContext, emailAddress);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByEmailAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress) {
            return base.Channel.GetByEmailAsync(userContext, emailAddress);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetByUserIdentifier(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string userIdentifier, bool includeDeletedAccounts) {
            return base.Channel.GetByUserIdentifier(userContext, userIdentifier, includeDeletedAccounts);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByUserIdentifierAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string userIdentifier, bool includeDeletedAccounts) {
            return base.Channel.GetByUserIdentifierAsync(userContext, userIdentifier, includeDeletedAccounts);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetByFacebookID(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string facebookID) {
            return base.Channel.GetByFacebookID(userContext, facebookID);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetByFacebookIDAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string facebookID) {
            return base.Channel.GetByFacebookIDAsync(userContext, facebookID);
        }
        
        public void AddModuleRights(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName, bool isModuleRightsAdministrator) {
            base.Channel.AddModuleRights(userContext, accountId, moduleRightsClassName, isModuleRightsAdministrator);
        }
        
        public System.Threading.Tasks.Task AddModuleRightsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName, bool isModuleRightsAdministrator) {
            return base.Channel.AddModuleRightsAsync(userContext, accountId, moduleRightsClassName, isModuleRightsAdministrator);
        }
        
        public void RemoveModuleRights(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName) {
            base.Channel.RemoveModuleRights(userContext, accountId, moduleRightsClassName);
        }
        
        public System.Threading.Tasks.Task RemoveModuleRightsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string moduleRightsClassName) {
            return base.Channel.RemoveModuleRightsAsync(userContext, accountId, moduleRightsClassName);
        }
        
        public string[] GetAllModuleRights(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetAllModuleRights(userContext);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllModuleRightsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetAllModuleRightsAsync(userContext);
        }
        
        public string[] GetAccountModuleRightsList(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId) {
            return base.Channel.GetAccountModuleRightsList(userContext, accountId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountModuleRightsListAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId) {
            return base.Channel.GetAccountModuleRightsListAsync(userContext, accountId);
        }
        
        public void SetAccountGroups(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupsIds) {
            base.Channel.SetAccountGroups(userContext, accountId, groupsIds);
        }
        
        public System.Threading.Tasks.Task SetAccountGroupsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupsIds) {
            return base.Channel.SetAccountGroupsAsync(userContext, accountId, groupsIds);
        }
        
        public void RemoveAccountFromGroup(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string groupId) {
            base.Channel.RemoveAccountFromGroup(userContext, accountId, groupId);
        }
        
        public System.Threading.Tasks.Task RemoveAccountFromGroupAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string groupId) {
            return base.Channel.RemoveAccountFromGroupAsync(userContext, accountId, groupId);
        }
        
        public ExampleRepoClient.httpsRepo.AccountSearchReturn GetAccountsForFolder(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderid, int desiredCount) {
            return base.Channel.GetAccountsForFolder(userContext, folderid, desiredCount);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountSearchReturn> GetAccountsForFolderAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string folderid, int desiredCount) {
            return base.Channel.GetAccountsForFolderAsync(userContext, folderid, desiredCount);
        }
        
        public ExampleRepoClient.httpsRepo.AccountSearchReturn SearchAccounts(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount) {
            return base.Channel.SearchAccounts(userContext, searchText, folderId, groupId, desiredCount);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountSearchReturn> SearchAccountsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount) {
            return base.Channel.SearchAccountsAsync(userContext, searchText, folderId, groupId, desiredCount);
        }
        
        public ExampleRepoClient.httpsRepo.AccountSearchReturn SearchAccountsInFolderAndSubFolders(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount) {
            return base.Channel.SearchAccountsInFolderAndSubFolders(userContext, searchText, folderId, groupId, desiredCount);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountSearchReturn> SearchAccountsInFolderAndSubFoldersAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string searchText, string folderId, string groupId, int desiredCount) {
            return base.Channel.SearchAccountsInFolderAndSubFoldersAsync(userContext, searchText, folderId, groupId, desiredCount);
        }
        
        public ExampleRepoClient.httpsRepo.Account[] GetSpecifiedAccountsICanImpersonate(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.GetSpecifiedAccountsICanImpersonate(context);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetSpecifiedAccountsICanImpersonateAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.GetSpecifiedAccountsICanImpersonateAsync(context);
        }
        
        public ExampleRepoClient.httpsRepo.EntityIdentifier[] GetAccountIdsICanImpersonate(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.GetAccountIdsICanImpersonate(context);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.EntityIdentifier[]> GetAccountIdsICanImpersonateAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context) {
            return base.Channel.GetAccountIdsICanImpersonateAsync(context);
        }
        
        public void AddModuleRightsInstance(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountID, ExampleRepoClient.httpsRepo.AbstractModuleRights rights) {
            base.Channel.AddModuleRightsInstance(userContext, accountID, rights);
        }
        
        public System.Threading.Tasks.Task AddModuleRightsInstanceAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountID, ExampleRepoClient.httpsRepo.AbstractModuleRights rights) {
            return base.Channel.AddModuleRightsInstanceAsync(userContext, accountID, rights);
        }
        
        public ExampleRepoClient.httpsRepo.AccountAndGroupsReturn GetAccountAndGroupInfo(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string[] id) {
            return base.Channel.GetAccountAndGroupInfo(userContext, id);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.AccountAndGroupsReturn> GetAccountAndGroupInfoAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string[] id) {
            return base.Channel.GetAccountAndGroupInfoAsync(userContext, id);
        }
        
        public void AddAccountToGroups(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupIds) {
            base.Channel.AddAccountToGroups(userContext, accountId, groupIds);
        }
        
        public System.Threading.Tasks.Task AddAccountToGroupsAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId, string[] groupIds) {
            return base.Channel.AddAccountToGroupsAsync(userContext, accountId, groupIds);
        }
        
        public void SaveWithoutUserContext(ExampleRepoClient.httpsRepo.Account account) {
            base.Channel.SaveWithoutUserContext(account);
        }
        
        public System.Threading.Tasks.Task SaveWithoutUserContextAsync(ExampleRepoClient.httpsRepo.Account account) {
            return base.Channel.SaveWithoutUserContextAsync(account);
        }
        
        public string UpdateAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account) {
            return base.Channel.UpdateAccount(userContext, account);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.Account account) {
            return base.Channel.UpdateAccountAsync(userContext, account);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetAccountByPhoneNumber(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string phoneNumber) {
            return base.Channel.GetAccountByPhoneNumber(userContext, phoneNumber);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountByPhoneNumberAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string phoneNumber) {
            return base.Channel.GetAccountByPhoneNumberAsync(userContext, phoneNumber);
        }
        
        public void ActivateAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress) {
            base.Channel.ActivateAccount(userContext, emailAddress);
        }
        
        public System.Threading.Tasks.Task ActivateAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress) {
            return base.Channel.ActivateAccountAsync(userContext, emailAddress);
        }
        
        public void DeactivateAccount(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress) {
            base.Channel.DeactivateAccount(userContext, emailAddress);
        }
        
        public System.Threading.Tasks.Task DeactivateAccountAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string emailAddress) {
            return base.Channel.DeactivateAccountAsync(userContext, emailAddress);
        }
        
        public bool CheckAccountIsConfirmed(ExampleRepoClient.httpsRepo.Account account) {
            return base.Channel.CheckAccountIsConfirmed(account);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccountIsConfirmedAsync(ExampleRepoClient.httpsRepo.Account account) {
            return base.Channel.CheckAccountIsConfirmedAsync(account);
        }
        
        public string ConfirmAccount(string confirmationCode) {
            return base.Channel.ConfirmAccount(confirmationCode);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmAccountAsync(string confirmationCode) {
            return base.Channel.ConfirmAccountAsync(confirmationCode);
        }
        
        public void SendConfirmationEmailToAccount(string emailAddress) {
            base.Channel.SendConfirmationEmailToAccount(emailAddress);
        }
        
        public System.Threading.Tasks.Task SendConfirmationEmailToAccountAsync(string emailAddress) {
            return base.Channel.SendConfirmationEmailToAccountAsync(emailAddress);
        }
        
        public void SendConfirmationEmailToAccountWithParameters(string emailAddress, string[] parameters) {
            base.Channel.SendConfirmationEmailToAccountWithParameters(emailAddress, parameters);
        }
        
        public System.Threading.Tasks.Task SendConfirmationEmailToAccountWithParametersAsync(string emailAddress, string[] parameters) {
            return base.Channel.SendConfirmationEmailToAccountWithParametersAsync(emailAddress, parameters);
        }
        
        public void CloneAccountConfiguration(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string importerAccountId, string exporterAccountId) {
            base.Channel.CloneAccountConfiguration(userContext, importerAccountId, exporterAccountId);
        }
        
        public System.Threading.Tasks.Task CloneAccountConfigurationAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string importerAccountId, string exporterAccountId) {
            return base.Channel.CloneAccountConfigurationAsync(userContext, importerAccountId, exporterAccountId);
        }
        
        public string GetSecurityQuestionForAccount(string emailAddress) {
            return base.Channel.GetSecurityQuestionForAccount(emailAddress);
        }
        
        public System.Threading.Tasks.Task<string> GetSecurityQuestionForAccountAsync(string emailAddress) {
            return base.Channel.GetSecurityQuestionForAccountAsync(emailAddress);
        }
        
        public bool ConfirmSecurityAnswerForAccount(string emailAddress, string securityAnswer) {
            return base.Channel.ConfirmSecurityAnswerForAccount(emailAddress, securityAnswer);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmSecurityAnswerForAccountAsync(string emailAddress, string securityAnswer) {
            return base.Channel.ConfirmSecurityAnswerForAccountAsync(emailAddress, securityAnswer);
        }
        
        public void CheckSecurityAnswerAndSetPassword(string emailAddress, string securityAnswer, string newPassword) {
            base.Channel.CheckSecurityAnswerAndSetPassword(emailAddress, securityAnswer, newPassword);
        }
        
        public System.Threading.Tasks.Task CheckSecurityAnswerAndSetPasswordAsync(string emailAddress, string securityAnswer, string newPassword) {
            return base.Channel.CheckSecurityAnswerAndSetPasswordAsync(emailAddress, securityAnswer, newPassword);
        }
        
        public string[] GetSecurityQuestionsForAccount(string emailAddress) {
            return base.Channel.GetSecurityQuestionsForAccount(emailAddress);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSecurityQuestionsForAccountAsync(string emailAddress) {
            return base.Channel.GetSecurityQuestionsForAccountAsync(emailAddress);
        }
        
        public bool ConfirmSecurityQuestionAndAnswerForAccount(string emailAddress, string securityQuestion, string securityAnswer) {
            return base.Channel.ConfirmSecurityQuestionAndAnswerForAccount(emailAddress, securityQuestion, securityAnswer);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmSecurityQuestionAndAnswerForAccountAsync(string emailAddress, string securityQuestion, string securityAnswer) {
            return base.Channel.ConfirmSecurityQuestionAndAnswerForAccountAsync(emailAddress, securityQuestion, securityAnswer);
        }
        
        public void CheckSecurityQuestionAndAnswerAndSetPassword(string emailAddress, string securityQuestion, string securityAnswer, string newPassword) {
            base.Channel.CheckSecurityQuestionAndAnswerAndSetPassword(emailAddress, securityQuestion, securityAnswer, newPassword);
        }
        
        public System.Threading.Tasks.Task CheckSecurityQuestionAndAnswerAndSetPasswordAsync(string emailAddress, string securityQuestion, string securityAnswer, string newPassword) {
            return base.Channel.CheckSecurityQuestionAndAnswerAndSetPasswordAsync(emailAddress, securityQuestion, securityAnswer, newPassword);
        }
        
        public bool IsValidPassword(string password) {
            return base.Channel.IsValidPassword(password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidPasswordAsync(string password) {
            return base.Channel.IsValidPasswordAsync(password);
        }
        
        public bool IsValidActiveDirectoryUser(string username, string password) {
            return base.Channel.IsValidActiveDirectoryUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidActiveDirectoryUserAsync(string username, string password) {
            return base.Channel.IsValidActiveDirectoryUserAsync(username, password);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetAccountByHomeFolderId(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string homeFolderId) {
            return base.Channel.GetAccountByHomeFolderId(userContext, homeFolderId);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountByHomeFolderIdAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string homeFolderId) {
            return base.Channel.GetAccountByHomeFolderIdAsync(userContext, homeFolderId);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetAccountByConfirmationCode(string confirmationCode) {
            return base.Channel.GetAccountByConfirmationCode(confirmationCode);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountByConfirmationCodeAsync(string confirmationCode) {
            return base.Channel.GetAccountByConfirmationCodeAsync(confirmationCode);
        }
        
        public string GetAuthenticationId(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetAuthenticationId(userContext);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthenticationIdAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext) {
            return base.Channel.GetAuthenticationIdAsync(userContext);
        }
        
        public bool AccountHasManager(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId) {
            return base.Channel.AccountHasManager(userContext, accountId);
        }
        
        public System.Threading.Tasks.Task<bool> AccountHasManagerAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId) {
            return base.Channel.AccountHasManagerAsync(userContext, accountId);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetAccountManager(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId) {
            return base.Channel.GetAccountManager(userContext, accountId);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountManagerAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string accountId) {
            return base.Channel.GetAccountManagerAsync(userContext, accountId);
        }
        
        public ExampleRepoClient.httpsRepo.Account GetAccountsByEmployeeId(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string employeeId) {
            return base.Channel.GetAccountsByEmployeeId(userContext, employeeId);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account> GetAccountsByEmployeeIdAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string employeeId) {
            return base.Channel.GetAccountsByEmployeeIdAsync(userContext, employeeId);
        }
        
        public ExampleRepoClient.httpsRepo.Account[] GetAccountsByFirstAndLastName(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string firstName, string lastName) {
            return base.Channel.GetAccountsByFirstAndLastName(userContext, firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<ExampleRepoClient.httpsRepo.Account[]> GetAccountsByFirstAndLastNameAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string firstName, string lastName) {
            return base.Channel.GetAccountsByFirstAndLastNameAsync(userContext, firstName, lastName);
        }
        
        public void SetCurrentAccountCulture(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string cultureName) {
            base.Channel.SetCurrentAccountCulture(userContext, cultureName);
        }
        
        public System.Threading.Tasks.Task SetCurrentAccountCultureAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, string cultureName) {
            return base.Channel.SetCurrentAccountCultureAsync(userContext, cultureName);
        }
        
        public void SetSessionActionsType(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.EntityActionType[] actionType) {
            base.Channel.SetSessionActionsType(userContext, actionType);
        }
        
        public System.Threading.Tasks.Task SetSessionActionsTypeAsync(ExampleRepoClient.httpsRepo.AbstractUserContext userContext, ExampleRepoClient.httpsRepo.EntityActionType[] actionType) {
            return base.Channel.SetSessionActionsTypeAsync(userContext, actionType);
        }
        
        public void CheckUserContextWithIpAddress(ExampleRepoClient.httpsRepo.AbstractUserContext context, string callerIPAddress) {
            base.Channel.CheckUserContextWithIpAddress(context, callerIPAddress);
        }
        
        public System.Threading.Tasks.Task CheckUserContextWithIpAddressAsync(ExampleRepoClient.httpsRepo.AbstractUserContext context, string callerIPAddress) {
            return base.Channel.CheckUserContextWithIpAddressAsync(context, callerIPAddress);
        }
    }
}
